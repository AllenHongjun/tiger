<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TigerAdmin.Application</name>
    </assembly>
    <members>
        <member name="T:TigerAdmin.Books.BookAppService">
            <summary>
            书籍管理
            </summary>
        </member>
        <member name="M:TigerAdmin.Volo.Abp.Identity.TigerIdentityRoleAppService.AddToOrganizationUnitAsync(System.Guid,System.Guid)">
            <summary>
            角色关联组织(一个角色之关联一个组织)
            </summary>
            <param name="roleId"></param>
            <param name="ouId"></param>
            <returns></returns>
        </member>
        <member name="M:TigerAdmin.Volo.Abp.Identity.TigerIdentityRoleAppService.CreateAsync(Volo.Abp.Identity.IdentityRoleOrgCreateDto)">
            <summary>
            添加角色同时关联组织
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:TigerAdmin.Volo.Abp.Identity.TigerIdentityUserAppService.SmsSend">
            <summary>
            发送短信
            </summary>
            <returns></returns>
        </member>
        <member name="M:TigerAdmin.Volo.Abp.Identity.TigerIdentityUserAppService.EmailSend">
            <summary>
            发送邮件
            </summary>
            <returns></returns>
        </member>
        <member name="M:TigerAdmin.Volo.Abp.Identity.TigerIdentityUserAppService.SaveBytesAsync(System.Byte[])">
            <summary>
            保存文件
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:TigerAdmin.Volo.Abp.Identity.TigerIdentityUserAppService.GetBytesAsync">
            <summary>
            获取文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:TigerAdmin.Volo.Abp.Identity.TigerIdentityUserAppService.AddToOrganizationUnitsAsync(System.Guid,System.Collections.Generic.List{System.Guid})">
            <summary>
            将用户关联组织机构
            </summary>
            <param name="userId"></param>
            <param name="ouId"></param>
            <returns></returns>
        </member>
        <member name="M:TigerAdmin.Volo.Abp.Identity.TigerIdentityUserAppService.CreateAsync(Volo.Abp.Identity.IdentityUserOrgCreateDto)">
            <summary>
            添加用户，同时用户关联组织id
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:TigerAdmin.Volo.Abp.Identity.TigerIdentityUserAppService.GetListOrganizationUnitsAsync(System.Guid,System.Boolean)">
            <summary>
            获取用户关联的组织机构
            </summary>
            <param name="id">组织机构id</param>
            <param name="includeDetails"></param>
            <returns></returns>
        </member>
        <member name="M:TigerAdmin.Volo.Abp.Identity.TigerIdentityUserAppService.UpdateAsync(System.Guid,Volo.Abp.Identity.IdentityUserOrgUpdateDto)">
            <summary>
            修改用户及用户关联的组织
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Volo.Abp.AuditLogging.AuditLogAppService">
            <summary>
            审核日志
            </summary>
        </member>
        <member name="M:Volo.Abp.AuditLogging.AuditLogAppService.GetAsync(System.Guid)">
            <summary>
            获取一条
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.AuditLogging.AuditLogAppService.GetListAsync(Volo.Abp.AuditLogging.GetAuditLogDto)">
            <summary>
            审核日志列表
            </summary>
            <param name="input"></param>
            <returns></returns>
            <remarks>
            例子:
            Get api/Values/1
            </remarks>
            <param name="id">主键</param>
            <returns>测试字符串</returns> 
        </member>
        <member name="M:Volo.Abp.AuditLogging.AuditLogAppService.DeleteAsync(System.Guid)">
            <summary>
            删除一条
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.AuditLogging.AuditLogAppService.DeleteManyAsync(System.Guid[])">
            <summary>
            删除多条
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitAppService.SetLeaf(System.Collections.Generic.List{Volo.Abp.Identity.OrganizationUnitDto})">
            <summary>
            后面考虑处理存储leaf到数据库,避免这么进行处理
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
    </members>
</doc>
