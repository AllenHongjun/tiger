//==============================================================================
//
//  This file was auto-generated by a tool using the PayPal REST API schema.
//  More information: https://developer.paypal.com/docs/api/
//
//==============================================================================
using Newtonsoft.Json;
using PayPal.Util;

namespace PayPal.Api
{
    /// <summary>
    /// Verify webhook signature.
    /// <para>
    /// See <a href="https://developer.paypal.com/docs/api/">PayPal Developer documentation</a> for more information.
    /// </para>
    /// </summary>
    public class VerifyWebhookSignature : PayPalRelationalObject
    {
        /// <summary>
        /// The algorithm that PayPal uses to generate the signature and that you can use to verify the signature. Extract this value from the `PAYPAL-AUTH-ALGO` response header, which is received with the webhook notification.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "auth_algo")]
        public string auth_algo { get; set; }

        /// <summary>
        /// The X.509 public key certificate. Download the certificate from this URL and use it to verify the signature. Extract this value from the `PAYPAL-CERT-URL` response header, which is received with the webhook notification.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "cert_url")]
        public string cert_url { get; set; }

        /// <summary>
        /// The ID of the HTTP transmission. Contained in the `PAYPAL-TRANSMISSION-ID` header of the notification message.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "transmission_id")]
        public string transmission_id { get; set; }

        /// <summary>
        /// The PayPal-generated asymmetric signature. Extract this value from the `PAYPAL-TRANSMISSION-SIG` response header, which is received with the webhook notification.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "transmission_sig")]
        public string transmission_sig { get; set; }

        /// <summary>
        /// The date and time of the HTTP transmission. Contained in the `PAYPAL-TRANSMISSION-TIME` header of the notification message.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "transmission_time")]
        public string transmission_time { get; set; }

        /// <summary>
        /// The ID of the webhook as configured in your Developer Portal account.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "webhook_id")]
        public string webhook_id { get; set; }

        /// <summary>
        /// The webhook notification, which is the content of the HTTP `POST` request body.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "webhook_event")]
        public WebhookEvent webhook_event { get; set; }

        /// <summary>
        /// Verifies a webhook signature.
        /// </summary>
        /// <param name="apiContext">APIContext used for the API call.</param>
        /// <returns>VerifyWebhookSignatureResponse</returns>
        public VerifyWebhookSignatureResponse Post(APIContext apiContext)
        {
            // Validate the arguments to be used in the request
            ArgumentValidator.ValidateAndSetupAPIContext(apiContext);

            // Configure and send the request
            var resourcePath = "v1/notifications/verify-webhook-signature";
            return PayPalResource.ConfigureAndExecute<VerifyWebhookSignatureResponse>(apiContext, HttpMethod.POST, resourcePath, this.ConvertToJson());
        }
    }
}
