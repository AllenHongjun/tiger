//==============================================================================
//
//  This file was auto-generated by a tool using the PayPal REST API schema.
//  More information: https://developer.paypal.com/docs/api/
//
//==============================================================================
using System.Collections.Generic;
using Newtonsoft.Json;

namespace PayPal.Api
{
    /// <summary>
    /// Detailed template information.
    /// <para>
    /// See <a href="https://developer.paypal.com/docs/api/">PayPal Developer documentation</a> for more information.
    /// </para>
    /// </summary>
    public class InvoiceTemplateData : PayPalSerializableObject
    {
        /// <summary>
        /// Information about the merchant who sends the invoice.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "merchant_info")]
        public MerchantInfo merchant_info { get; set; }

        /// <summary>
        /// The required invoice recipient email address and any optional billing information. Supports one recipient only.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "billing_info")]
        public List<BillingInfo> billing_info { get; set; }

        /// <summary>
        /// For invoices sent by email, one or more email addresses to which to send a Cc: copy of the notification. Supports only email addresses under participant.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "cc_info")]
        public List<string> cc_info { get; set; }

        /// <summary>
        /// The shipping information for entities to whom items are shipped.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "shipping_info")]
        public ShippingInfo shipping_info { get; set; }

        /// <summary>
        /// The list of items to include in the invoice. Each invoice can contain up to 100 items.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "items")]
        public List<InvoiceItem> items { get; set; }

        /// <summary>
        /// Optional. The payment deadline for the invoice. Valid value is either `term_type` or `due_date` but not both.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "payment_term")]
        public PaymentTerm payment_term { get; set; }

        /// <summary>
        /// Reference data, such as PO number, to add to the invoice.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "reference")]
        public string reference { get; set; }

        /// <summary>
        /// The invoice level discount, as a percent or an amount value.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "discount")]
        public Cost discount { get; set; }

        /// <summary>
        /// The shipping cost, as a percent or an amount value.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "shipping_cost")]
        public ShippingCost shipping_cost { get; set; }

        /// <summary>
        /// The custom amount to apply to an invoice. If you include a label, you must include the custom amount.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "custom")]
        public CustomAmount custom { get; set; }

        /// <summary>
        /// Indicates whether the invoice allows a partial payment. If `false`, invoice must be paid in full. If `true`, the invoice allows partial payments. Default is `false`.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "allow_partial_payment")]
        public bool? allow_partial_payment { get; set; }

        /// <summary>
        /// The minimum amount allowed for a partial payment. Valid if `allow_partial_payment` is `true`.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "minimum_amount_due")]
        public Currency minimum_amount_due { get; set; }

        /// <summary>
        /// Indicates whether the invoice allows a partial payment. If `false`, invoice must be paid in full. If `true`, the invoice allows partial payments. Default is `false`.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "tax_calculated_after_discount")]
        public bool? tax_calculated_after_discount { get; set; }

        /// <summary>
        /// Indicates whether the unit price includes tax. Default is `false`.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "tax_inclusive")]
        public bool? tax_inclusive { get; set; }

        /// <summary>
        /// The general terms of the invoice.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "terms")]
        public string terms { get; set; }

        /// <summary>
        /// A note to the payer.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "note")]
        public string note { get; set; }

        /// <summary>
        /// A private bookkeeping memo for the merchant.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "merchant_memo")]
        public string merchant_memo { get; set; }

        /// <summary>
        /// The full URL of an external logo image.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "logo_url")]
        public string logo_url { get; set; }

        /// <summary>
        /// The total amount of the invoice.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "total_amount")]
        public Currency total_amount { get; set; }

        /// <summary>
        /// List of files that are attached to the invoice.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "attachments")]
        public List<FileAttachment> attachments { get; set; }
    }
}
