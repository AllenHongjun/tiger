//==============================================================================
//
//  This file was auto-generated by a tool using the PayPal REST API schema.
//  More information: https://developer.paypal.com/docs/api/
//
//==============================================================================
using Newtonsoft.Json;

namespace PayPal.Api
{
    /// <summary>
    /// A refund transaction.
    /// <para>
    /// See <a href="https://developer.paypal.com/docs/api/">PayPal Developer documentation</a> for more information.
    /// </para>
    /// </summary>
    public class RefundRequest : PayPalSerializableObject
    {
        /// <summary>
        /// Details including both refunded amount (to payer) and refunded fee (to payee).
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "amount")]
        public Amount amount { get; set; }

        /// <summary>
        /// Description of what is being refunded for. Character length and limitations: 255 single-byte alphanumeric characters.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "description")]
        public string description { get; set; }

        /// <summary>
        /// Type of PayPal funding source (balance or eCheck) that can be used for auto refund.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "refund_source")]
        public string refund_source { get; set; }

        /// <summary>
        /// Reason description for the Sale transaction being refunded.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "reason")]
        public string reason { get; set; }

        /// <summary>
        /// The invoice number that is used to track this payment. Character length and limitations: 127 single-byte alphanumeric characters.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "invoice_number")]
        public string invoice_number { get; set; }

        /// <summary>
        /// Flag to indicate that the buyer was already given store credit for a given transaction.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "refund_advice")]
        public bool? refund_advice { get; set; }
    }
}
