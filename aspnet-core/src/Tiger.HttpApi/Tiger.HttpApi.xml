<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tiger.HttpApi</name>
    </assembly>
    <members>
        <member name="T:Tiger.Module.OssManagement.FileUploadOperation">
            <summary>
            Add extra parameters for uploading files in swagger.
            
            </summary>
            <remarks>
            https://stackoverflow.com/questions/50172268/how-can-i-add-an-upload-button-to-swagger-ui-in-net-core-web-api?rq=3
            </remarks>
        </member>
        <member name="M:Tiger.Module.OssManagement.FileUploadOperation.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
            Applies the specified operation.
            </summary>
            <param name="operation">The operation.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Tiger.Module.OssManagement.FileUploadOperation.FileContentType">
            <summary>
            Indicates swashbuckle should consider the parameter as a file upload
            指示 swashbuckle 应将参数视为文件上传
            </summary>
        </member>
        <member name="T:Tiger.Module.OssManagement.OssContainerController">
            <summary>
            Oss对象存储
            </summary>
        </member>
        <member name="M:Tiger.Module.OssManagement.OssObjectController.CreateAsync(Tiger.Module.OssManagement.Dtos.CreateOssObjectInput)">
            <summary>
            创建对象（文件上传）
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.OssManagement.OssObjectController.UploadAsync(Tiger.Module.OssManagement.Dtos.UploadFileChunkInput)">
            <summary>
            对象分片上传
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.OssManagement.OssObjectController.DeleteAsync(Tiger.Module.OssManagement.Dtos.GetOssObjectInput)">
            <summary>
            删除
            </summary>
            <param name="input"></param>
            <returns></returns>
            <remarks>
            注意delete的参数是在url中传递的
            </remarks>
        </member>
        <member name="M:Tiger.Module.OssManagement.PublicFilesController.UploadAsync(Tiger.Module.OssManagement.Dtos.UploadFileInput)">
            <summary>
            上传文件
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.OssManagement.PublicFilesController.UploadAsync(Tiger.Module.OssManagement.Dtos.UploadFileChunkInput)">
            <summary>
            上传文件（分片）
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Tiger.Module.System.CacheController">
            <summary>
            缓存管理
            </summary>
        </member>
        <member name="M:Tiger.Module.System.CacheController.GetBasicInfo">
            <summary>
            获取基本信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:Tiger.Module.System.DataController">
            <summary>
            数据字典
            </summary>
        </member>
        <member name="M:Tiger.Module.System.DataController.CreateAsync(Tiger.Module.System.Platform.Datas.Dtos.DataCreateDto)">
            <summary>
            创建数据字典
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.DataController.DeleteAsync(System.Guid)">
            <summary>
            删除数据字典
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.DataController.GetAsync(System.String)">
            <summary>
            根据名称查询数据字典
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.DataController.GetAsync(System.Guid)">
            <summary>
            根据id查询
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.DataController.GetAllAsync">
            <summary>
            查询所有数据字典
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.DataController.GetListAsync(Tiger.Module.System.Platform.Datas.Dtos.DataGetListInput)">
            <summary>
            查询数据字典列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.DataController.MoveAsync(System.Guid,Tiger.Module.System.Platform.Datas.Dtos.DataMoveDto)">
            <summary>
            移动数据字典
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.DataController.UpdateAsync(System.Guid,Tiger.Module.System.Platform.Datas.Dtos.DataUpdateDto)">
            <summary>
            更新数据字典
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.DataController.CreateItemAsync(System.Guid,Tiger.Module.System.Platform.Datas.Dtos.DataItemCreateDto)">
            <summary>
            创建字典数据
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.DataController.DeleteItemAsync(System.Guid,System.String)">
            <summary>
            删除字典数据
            </summary>
            <param name="id"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.DataController.UpdateItemAsync(System.Guid,System.String,Tiger.Module.System.Platform.Datas.Dtos.DataItemUpdateDto)">
            <summary>
            修改字典数据
            </summary>
            <param name="id"></param>
            <param name="name"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Tiger.Module.System.LanguageController">
            <summary>
            语言管理
            </summary>
        </member>
        <member name="M:Tiger.Module.System.LanguageController.CreateAsync(Tiger.Module.System.Localization.Dtos.LanguageTextDto)">
            <summary>
            添加语言
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.LanguageController.DeleteAsync(System.Guid)">
            <summary>
            删除语言
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.LanguageController.GetListAsync(Tiger.Module.System.Localization.Dtos.LanguageGetListInput)">
            <summary>
            获取语言列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.LanguageController.UpdateAsync(System.Guid,Tiger.Module.System.Localization.Dtos.UpdateLanguageDto)">
            <summary>
            更新语言
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Tiger.Module.System.LanguageTextController">
            <summary>
            语言文本管理
            </summary>
        </member>
        <member name="T:Tiger.Module.System.LayoutController">
            <summary>
            布局
            </summary>
        </member>
        <member name="M:Tiger.Module.System.LayoutController.CreateAsync(Tiger.Module.System.Platform.Layouts.Dto.LayoutCreateDto)">
            <summary>
            创建布局
            </summary>
            <param name="input"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Tiger.Module.System.LayoutController.DeleteAsync(System.Guid)">
            <summary>
            删除布局
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.LayoutController.GetAllListAsync">
            <summary>
            获取所有布局
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.LayoutController.GetListAsync(Tiger.Module.System.Platform.Layouts.Dto.GetLayoutListInput)">
            <summary>
            获取布局
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.LayoutController.UpdateAsync(System.Guid,Tiger.Module.System.Platform.Layouts.Dto.LayoutUpdateDto)">
            <summary>
            更新布局
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Tiger.Module.System.MenuController">
            <summary>
            菜单管理
            </summary>
        </member>
        <member name="M:Tiger.Module.System.MenuController.GetCurrentUserMenuListAsync(Tiger.Module.System.Platform.Menus.Dto.GetMenuInput)">
            <summary>
            获取当前用户菜单列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.MenuController.GetAsync(System.Guid)">
            <summary>
            获取菜单详情
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.MenuController.GetAllAsync(Tiger.Module.System.Platform.Menus.Dto.MenuGetAllInput)">
            <summary>
            获取所有菜单
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.MenuController.GetListAsync(Tiger.Module.System.Platform.Menus.Dto.MenuGetListInput)">
            <summary>
            获取菜单分页列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.MenuController.CreateAsync(Tiger.Module.System.Platform.Menus.Dto.MenuCreateDto)">
            <summary>
            创建菜单
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.MenuController.UpdateAsync(System.Guid,Tiger.Module.System.Platform.Menus.Dto.MenuUpdateDto)">
            <summary>
            更新菜单
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.MenuController.DeleteAsync(System.Guid)">
            <summary>
            删除菜单
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.MenuController.SetUserMenusAsync(Tiger.Module.System.Platform.Menus.Dto.UserMenuInput)">
            <summary>
            设置用户菜单
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.MenuController.GetUserMenuListAsync(Tiger.Module.System.Platform.Menus.Dto.MenuGetByUserInput)">
            <summary>
            获取用户菜单列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.MenuController.SetRoleMenusAsync(Tiger.Module.System.Platform.Menus.Dto.RoleMenuInput)">
            <summary>
            设置角色菜单
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.MenuController.GetRoleMenuListAsync(Tiger.Module.System.Platform.Menus.Dto.MenuGetByRoleInput)">
            <summary>
            获取角色菜单列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Tiger.Module.System.ServerController">
            <summary>
            获取服务器监控信息
            </summary>
        </member>
        <member name="M:Tiger.Module.System.ServerController.GetServerBase">
            <summary>
            获取服务器基本信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.ServerController.GetServerDisk">
            <summary>
            磁盘信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.ServerController.GetServerUsed">
            <summary>
            服务器使用信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:Tiger.Module.System.TextTemplateController">
            <summary>
            文本模板
            </summary>
        </member>
        <member name="M:Tiger.Module.System.TextTemplateController.GetAsync(System.String)">
            <summary>
            获取文本模板定义
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.TextTemplateController.GetContentAsync(Tiger.Module.System.TextTemplate.Dtos.TextTemplateContentGetInput)">
            <summary>
            获取文本模板内容
            </summary>
            <param name="input"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Tiger.Module.System.TextTemplateController.GetListAsync(Tiger.Module.System.TextTemplate.Dtos.TextTemplateGetListInput)">
            <summary>
            获取文本模板分页列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.TextTemplateController.RestoreToDefaultAsync(Tiger.Module.System.TextTemplate.Dtos.TextTemplateRestoreInput)">
            <summary>
            重置默认值
            </summary>
            <param name="restoreInput"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.TextTemplateController.UpdateAsync(Tiger.Module.System.TextTemplate.Dtos.TextTemplateUpdateInput)">
            <summary>
            更新文本模板定义
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Tiger.Module.System.VersionController">
            <summary>
            版本文件管理
            </summary>
        </member>
        <member name="M:Tiger.Module.System.VersionController.CreateAsync(Tiger.Module.System.Platform.Versions.Dto.VersionCreateDto)">
            <summary>
            创建版本
            </summary>
            <param name="versionCreate"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.VersionController.AppendFileAsync(Tiger.Module.System.Platform.Versions.Dto.VersionFileCreateDto)">
            <summary>
            添加版本文件
            </summary>
            <param name="versionFileCreate"></param>
            <returns></returns>
            <exception cref="T:Volo.Abp.UserFriendlyException"></exception>
        </member>
        <member name="M:Tiger.Module.System.VersionController.DownloadFileAsync(Tiger.Module.System.Platform.Versions.Dto.VersionFileGetDto)">
            <summary>
            下载文件
            </summary>
            <param name="versionFileGet"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.VersionController.RemoveFileAsync(Tiger.Module.System.Platform.Versions.Dto.VersionFileDeleteDto)">
            <summary>
            移除版本文件
            </summary>
            <param name="versionFileDelete"></param>
            <returns></returns>
        </member>
        <member name="T:Tiger.Module.TaskManagement.BackgroundJobActionController">
            <summary>
            作业行为
            </summary>
        </member>
        <member name="M:Tiger.Module.TaskManagement.BackgroundJobActionController.AddActionAsync(System.String,Tiger.Module.TaskManagement.Dtos.BackgroundJobActionCreateDto)">
            <summary>
            添加作业行为
            </summary>
            <param name="jobId"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.TaskManagement.BackgroundJobActionController.DeleteActionAsync(System.Guid)">
            <summary>
            删除作业行为
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.TaskManagement.BackgroundJobActionController.GetActionsAsync(System.String)">
            <summary>
            获取作业行为详情
            </summary>
            <param name="jobId"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.TaskManagement.BackgroundJobActionController.GetDefinitionsAsync(Tiger.Module.TaskManagement.Dtos.BackgroundJobActionGetDefinitionsInput)">
            <summary>
            获取作业行为定义
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.TaskManagement.BackgroundJobActionController.UpdateActionAsync(System.Guid,Tiger.Module.TaskManagement.Dtos.BackgroundJobActionUpdateDto)">
            <summary>
            更新作业行为
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Tiger.Module.TaskManagement.BackgroundJobInfoController">
            <summary>
            作业管理
            </summary>
        </member>
        <member name="M:Tiger.Module.TaskManagement.BackgroundJobInfoController.CreateAsync(Tiger.Module.TaskManagement.Dtos.BackgroundJobInfoCreateDto)">
            <summary>
            创建
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.TaskManagement.BackgroundJobInfoController.DeleteAsync(System.String)">
            <summary>
            删除
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.TaskManagement.BackgroundJobInfoController.GetAsync(System.String)">
            <summary>
            获取详细
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.TaskManagement.BackgroundJobInfoController.GetListAsync(Tiger.Module.TaskManagement.Dtos.BackgroundJobInfoGetListInput)">
            <summary>
            获取列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.TaskManagement.BackgroundJobInfoController.PauseAsync(System.String)">
            <summary>
            暂停
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.TaskManagement.BackgroundJobInfoController.ResumeAsync(System.String)">
            <summary>
            重启
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.TaskManagement.BackgroundJobInfoController.TriggerAsync(System.String)">
            <summary>
            触发
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.TaskManagement.BackgroundJobInfoController.StopAsync(System.String)">
            <summary>
            停止
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.TaskManagement.BackgroundJobInfoController.UpdateAsync(System.String,Tiger.Module.TaskManagement.Dtos.BackgroundJobInfoUpdateDto)">
            <summary>
            更新
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.TaskManagement.BackgroundJobInfoController.StartAsync(System.String)">
            <summary>
            批量启动
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.TaskManagement.BackgroundJobInfoController.BulkStopAsync(Tiger.Module.TaskManagement.Dtos.BackgroundJobInfoBatchInput)">
            <summary>
            批量停止
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.TaskManagement.BackgroundJobInfoController.BulkStartAsync(Tiger.Module.TaskManagement.Dtos.BackgroundJobInfoBatchInput)">
            <summary>
            批量启动
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.TaskManagement.BackgroundJobInfoController.BulkTriggerAsync(Tiger.Module.TaskManagement.Dtos.BackgroundJobInfoBatchInput)">
            <summary>
            批量触发
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.TaskManagement.BackgroundJobInfoController.BulkResumeAsync(Tiger.Module.TaskManagement.Dtos.BackgroundJobInfoBatchInput)">
            <summary>
            批量重启
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.TaskManagement.BackgroundJobInfoController.BulkPauseAsync(Tiger.Module.TaskManagement.Dtos.BackgroundJobInfoBatchInput)">
            <summary>
            批量暂停
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.TaskManagement.BackgroundJobInfoController.BulkDeleteAsync(Tiger.Module.TaskManagement.Dtos.BackgroundJobInfoBatchInput)">
            <summary>
            批量删除
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.TaskManagement.BackgroundJobInfoController.GetDefinitionsAsync">
            <summary>
            获取作业定义
            </summary>
            <returns></returns>
        </member>
        <member name="T:Tiger.Module.TaskManagement.BackgroundJobLogController">
            <summary>
            作业日志
            </summary>
        </member>
        <member name="M:Tiger.Module.TaskManagement.BackgroundJobLogController.DeleteAsync(System.Int64)">
            <summary>
            删除
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.TaskManagement.BackgroundJobLogController.GetAsync(System.Int64)">
            <summary>
            获取详情
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.TaskManagement.BackgroundJobLogController.GetListAsync(Tiger.Module.TaskManagement.Dtos.BackgroundJobLogGetListInput)">
            <summary>
            分页列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Tiger.TigerHttpApiModule">
            <summary>
            用于定义API控制器.
            </summary>
        </member>
        <member name="T:Tiger.Volo.Abp.Account.AccountController">
            <summary>
            账号
            </summary>
        </member>
        <member name="M:Tiger.Volo.Abp.Account.AccountController.RegisterAsync(Tiger.Volo.Abp.Account.Dto.PhoneRegisterDto)">
            <summary>
            通过手机号注册
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.Account.AccountController.SendPhoneRegisterCodeAsync(Tiger.Volo.Abp.Account.Dto.SendPhoneRegisterCodeDto)">
            <summary>
            发送手机号注册验证码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.Account.AccountController.SendPhoneSigninCodeAsync(Tiger.Volo.Abp.Account.Dto.SendPhoneSigninCodeDto)">
            <summary>
            发送手机号登录验证码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.Account.AccountController.SendPhoneResetPasswordCodeAsync(Tiger.Volo.Abp.Account.Dto.SendPhoneResetPasswordCode)">
            <summary>
            发送手机号密码重置验证码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.Account.AccountController.ResetPasswordAsync(Tiger.Volo.Abp.Account.Dto.PhoneResetPasswordDto)">
            <summary>
            通过手机号重置密码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.Account.AccountController.SendEmailSigninCodeAsync(Tiger.Volo.Abp.Account.Dto.SendEmailSigninCodeDto)">
            <summary>
            发送邮件登录验证码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Tiger.Volo.Abp.Account.ProfileController">
            <summary>
            个人信息管理
            </summary>
        </member>
        <member name="M:Tiger.Volo.Abp.Account.ProfileController.SendChangePhoneNumberCodeAsync(Tiger.Volo.Abp.Account.Dto.SendChangePhoneNumberCodeInput)">
            <summary>
            发送修改手机号验证码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.Account.ProfileController.ChangePhoneNumberAsync(Tiger.Volo.Abp.Account.Dto.ChangePhoneNumberInput)">
            <summary>
            修改用户手机号
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.Account.ProfileController.ConfirmEmailAsync(Tiger.Volo.Abp.Account.Dto.ComfirmEmailInput)">
            <summary>
            确认用户邮箱
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.Account.ProfileController.SendEmailConfirmLinkAsync(Tiger.Volo.Abp.Account.Dto.SendEmailConfirmCodeDto)">
            <summary>
            发送邮箱确认链接
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.Account.ProfileController.ChangeAvatarAsync(Tiger.Volo.Abp.Account.Dto.ChangeAvatarInput)">
            <summary>
            修改用户头像
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Tiger.Volo.Abp.IdentityServer.ApiResourceController">
            <summary>
            Api资源
            </summary>
        </member>
        <member name="M:Tiger.Volo.Abp.IdentityServer.ApiResourceController.CreateAsync(Tiger.Volo.Abp.IdentityServer.ApiResources.ApiResourceCreateDto)">
            <summary>
            创建
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.IdentityServer.ApiResourceController.DeleteAsync(System.Guid)">
            <summary>
            删除
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.IdentityServer.ApiResourceController.GetAsync(System.Guid)">
            <summary>
            查看详情
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.IdentityServer.ApiResourceController.GetListAsync(Tiger.Volo.Abp.IdentityServer.ApiResources.ApiResourceGetByPagedInputDto)">
            <summary>
            分页查询
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.IdentityServer.ApiResourceController.UpdateAsync(System.Guid,Tiger.Volo.Abp.IdentityServer.ApiResources.ApiResourceUpdateDto)">
            <summary>
            更新
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Tiger.Volo.Abp.IdentityServer.ClientController">
            <summary>
            IdentityServer4客户端
            </summary>
        </member>
        <member name="M:Tiger.Volo.Abp.IdentityServer.ClientController.CloneAsync(System.Guid,Tiger.Volo.Abp.IdentityServer.Clients.ClientCloneDto)">
            <summary>
            克隆客户端
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.IdentityServer.ClientController.CreateAsync(Tiger.Volo.Abp.IdentityServer.Clients.ClientCreateDto)">
            <summary>
            新增客户端
            </summary>
            <param name="input"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Tiger.Volo.Abp.IdentityServer.ClientController.DeleteAsync(System.Guid)">
            <summary>
            删除客户端
            </summary>
            <param name="id"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Tiger.Volo.Abp.IdentityServer.ClientController.GetAllDistinctAllowedCorsOriginsAsync">
            <summary>
            获取所有跨域地址
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Tiger.Volo.Abp.IdentityServer.ClientController.GetAssignableApiResourcesAsync">
            <summary>
            获取可用的Api资源列表
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Tiger.Volo.Abp.IdentityServer.ClientController.GetAssignableIdentityResourcesAsync">
            <summary>
            获取可用的身份资源
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Tiger.Volo.Abp.IdentityServer.ClientController.GetAsync(System.Guid)">
            <summary>
            获取客户端详情
            </summary>
            <param name="id"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Tiger.Volo.Abp.IdentityServer.ClientController.GetListAsync(Tiger.Volo.Abp.IdentityServer.Clients.ClientGetByPagedDto)">
            <summary>
            获取客户端列表
            </summary>
            <param name="input"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Tiger.Volo.Abp.IdentityServer.ClientController.UpdateAsync(System.Guid,Tiger.Volo.Abp.IdentityServer.Clients.ClientUpdateDto)">
            <summary>
            更新客户端
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Tiger.Volo.Abp.IdentityServer.IdentityResourceController">
            <summary>
            标识资源
            </summary>
        </member>
        <member name="M:Tiger.Volo.Abp.IdentityServer.IdentityResourceController.CreateAsync(Tiger.Volo.Abp.IdentityServer.IdentityResources.IdentityResourceCreateOrUpdateDto)">
            <summary>
            创建标识资源
            </summary>
            <param name="input"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Tiger.Volo.Abp.IdentityServer.IdentityResourceController.DeleteAsync(System.Guid)">
            <summary>
            删除标识资源
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.IdentityServer.IdentityResourceController.GetAsync(System.Guid)">
            <summary>
            获取标识资源
            </summary>
            <param name="id"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Tiger.Volo.Abp.IdentityServer.IdentityResourceController.GetListAsync(Tiger.Volo.Abp.IdentityServer.IdentityResources.IdentityResourceGetByPagedDto)">
            <summary>
            获取标识资源列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.IdentityServer.IdentityResourceController.UpdateAsync(System.Guid,Tiger.Volo.Abp.IdentityServer.IdentityResources.IdentityResourceCreateOrUpdateDto)">
            <summary>
            更新标识资源
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Tiger.Volo.Abp.IdentityServer.PersistedGrantController">
            <summary>
            持续授权
            </summary>
        </member>
        <member name="M:Tiger.Volo.Abp.IdentityServer.PersistedGrantController.CreateAsync(Tiger.Volo.Abp.IdentityServer.Grants.Dto.CreateUpdatePersistedGrantDto)">
            <summary>
            创建授权
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.IdentityServer.PersistedGrantController.UpdateAsync(System.Guid,Tiger.Volo.Abp.IdentityServer.Grants.Dto.CreateUpdatePersistedGrantDto)">
            <summary>
            更新授权
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.IdentityServer.PersistedGrantController.DeleteAsync(System.Guid)">
            <summary>
            删除
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.IdentityServer.PersistedGrantController.GetAsync(System.Guid)">
            <summary>
            详情
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.IdentityServer.PersistedGrantController.GetListAsync(Tiger.Volo.Abp.IdentityServer.Grants.GetPersistedGrantInput)">
            <summary>
            分页列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Tiger.Volo.Abp.Identity.ClaimTypeController">
            <summary>
            声明类型
            </summary>
        </member>
        <member name="M:Tiger.Volo.Abp.Identity.ClaimTypeController.DeleteAsync(System.Guid)">
            <summary>
             删除
            </summary>
            <param name="id"></param>
            <returns></returns>
            <remarks>
            默认将id放到路由当中
            </remarks>
        </member>
        <member name="M:Tiger.Volo.Abp.Identity.ClaimTypeController.GetAllListAsync">
            <summary>
            获取所有声明类型
            </summary>
            <returns></returns>
        </member>
        <member name="T:Tiger.Volo.Abp.Identity.IdentitySecurityLogController">
            <summary>
            安全日志
            </summary>
        </member>
        <member name="M:Tiger.Volo.Abp.Identity.IdentitySecurityLogController.DeleteAsync(System.Guid)">
            <summary>
            删除安全日志
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.Identity.IdentitySecurityLogController.GetAsync(System.Guid)">
            <summary>
            获取安全日志明细
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.Identity.IdentitySecurityLogController.GetListAsync(Tiger.Volo.Abp.Identity.IdentitySecurityLogs.Dto.GetIdentitySecurityLogInput)">
            <summary>
            获取安全日志列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Tiger.Volo.Abp.Identity.TigerIdentityUserController">
            <summary>
            用户管理
            </summary>
        </member>
        <member name="M:Tiger.Volo.Abp.Identity.TigerIdentityUserController.GetListAsync(Tiger.Volo.Abp.Identity.Users.Dto.IdentityUserGetListInput)">
            <summary>
            分页获取用户列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.Identity.TigerIdentityUserController.AddToOrganizationUnitsAsync(System.Guid,System.Collections.Generic.List{System.Guid})">
            <summary>
            将用户关联组织
            </summary>
            <param name="userId"></param>
            <param name="ouIds"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.Identity.TigerIdentityUserController.CreateAsync(Tiger.Volo.Abp.Identity.OrganizationUnits.Dto.IdentityUserOrgCreateDto)">
            <summary>
            添加用户同时关联组织
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.Identity.TigerIdentityUserController.GetListOrganizationUnitsAsync(System.Guid,System.Boolean)">
            <summary>
            获取用户关联的组织单元
            </summary>
            <param name="id"></param>
            <param name="includeDetails"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.Identity.TigerIdentityUserController.UpdateAsync(System.Guid,Tiger.Volo.Abp.Identity.OrganizationUnits.Dto.IdentityUserOrgUpdateDto)">
            <summary>
            修改用户
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.Identity.TigerIdentityUserController.ChangePasswordAsync(System.Guid,Tiger.Volo.Abp.Identity.Users.Dto.IdentityUserSetPasswordInput)">
            <summary>
            修改用户密码
            </summary>
            <param name="id">用户id</param>
            <param name="input"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Tiger.Volo.Abp.Identity.TigerIdentityUserController.LockAsync(System.Guid,System.Int32)">
            <summary>
            锁定用户
            </summary>
            <param name="id">用户id</param>
            <param name="seconds">锁定时长单位 秒</param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.Identity.TigerIdentityUserController.UnlockAsync(System.Guid)">
            <summary>
            解锁用户
            </summary>
            <param name="id">用户id</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Tiger.Volo.Abp.Sass.EditionController">
            <summary>
            版本
            </summary>
        </member>
        <member name="T:Tiger.Volo.Abp.Sass.TenantController">
            <summary>
            租户
            </summary>
            <remarks>
            换一个模块重新定义名称一样的控制器，但是服务的名称可以是和原来一样的。
            </remarks>
        </member>
        <member name="T:Tiger.Volo.Abp.Setting.SettingController">
            <summary>
            系统设置
            </summary>
        </member>
        <member name="M:Tiger.Volo.Abp.Setting.SettingController.GroupSettingDefinitionsAsync">
            <summary>
            获取分组设置定义
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.Setting.SettingController.SetSettingValuesAsync(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            保存设置
            </summary>
            <param name="settingValues"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.Setting.SettingController.ResetSettingValuesAsync(System.Collections.Generic.List{System.String})">
            <summary>
            重置设置的值
            </summary>
            <param name="settingNames"></param>
            <returns></returns>
        </member>
        <member name="T:Volo.Abp.AuditLogging.AuditLogController">
            <summary>
            系统日志
            </summary>
        </member>
        <member name="M:Volo.Abp.AuditLogging.AuditLogController.DeleteAsync(System.Guid)">
            <summary>
            删除一条
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.AuditLogging.AuditLogController.DeleteManyAsync(System.Guid[])">
            <summary>
            删除多条
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.AuditLogging.AuditLogController.GetAsync(System.Guid)">
            <summary>
            获取单条日志
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.AuditLogging.AuditLogController.GetListAsync(Tiger.Volo.Abp.AuditLogging.Dto.GetAuditLogDto)">
            <summary>
            获取系统日志列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.AuditLogging.AuditLogController.GetAverageExecutionDurationPerDayAsync(System.DateTime,System.DateTime)">
            <summary>
            每日请求平均执行时间
            </summary>
            <param name="startDate">开始日期</param>
            <param name="endDate">结束日期</param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.AuditLogging.AuditLogController.GetEntityChangeAsync(System.Guid)">
            <summary>
            获取实体变更明细
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.AuditLogging.AuditLogController.GetEntityChangeListAsync(Tiger.Volo.Abp.AuditLogging.Dto.GetEntityChangeDto)">
            <summary>
            获取实体变更列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.AuditLogging.AuditLogController.GetEntityChangesWithUsernameAsync(Tiger.Volo.Abp.AuditLogging.Dto.GetEntityChangeWithUsernameDto)">
            <summary>
            获取实体变更及操作人列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.AuditLogging.AuditLogController.GetEntityChangeWithUsernameAsync(System.Guid)">
            <summary>
            获取实体变更及操作人明细
            </summary>
            <param name="entityChangeId"></param>
            <returns></returns>
        </member>
        <member name="T:Volo.Abp.Identity.OrganizationUnitController">
            <summary>
            组织架构服务
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.CreateAsync(Tiger.Volo.Abp.Identity.OrganizationUnits.Dto.OrganizationUnitCreateDto)">
            <summary>
            添加组织
            </summary>
            <param name="input"></param>
            <returns></returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.DeleteAsync(System.Guid)">
            <summary>
            删除组织
            </summary>
            <param name="id">Guid</param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.GetAsync(System.Guid)">
            <summary>
            获取明细
            </summary>
            <param name="id">Guid</param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.GetListAsync(Tiger.Volo.Abp.Identity.OrganizationUnits.Dto.GetOrganizationUnitInput)">
            <summary>
            获取组织列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.GetAllListAsync(Tiger.Volo.Abp.Identity.OrganizationUnits.Dto.GetAllOrgnizationUnitInput)">
            <summary>
            获取所有组织（树结构）
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.GetRootAsync">
            <summary>
            获取根组织
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.FindChildrenAsync(Tiger.Volo.Abp.Identity.OrganizationUnits.Dto.GetOrganizationUnitChildrenDto)">
            <summary>
            获取子节点
            </summary>
            <param name="input"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.GetLastChildOrNullAsync(System.Nullable{System.Guid})">
            <summary>
            获取最后的子节点
            </summary>
            <param name="parentId"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.GetNextChildCodeAsync(System.Nullable{System.Guid})">
            <summary>
            获取下一个子节点的组织编码
            </summary>
            <param name="parentId"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.UpdateAsync(System.Guid,Tiger.Volo.Abp.Identity.OrganizationUnits.Dto.OrganizationUnitUpdateDto)">
            <summary>
            修改组织
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.MoveAsync(System.Guid,System.Nullable{System.Guid})">
            <summary>
            将组织移动到指定父节点
            </summary>
            <param name="id"></param>
            <param name="parentId"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.GetDetailsAsync(System.Guid)">
            <summary>
            获取组织id查询单个组织(包含子节点的树结构)
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.GetRolesAsync(System.Nullable{System.Guid},Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto)">
            <summary>
            获取组织机构关联的角色
            </summary>
            <param name="ouId">组织id</param>
            <param name="roleInput">角色</param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.GetUnaddedRolesAsync(System.Guid,Tiger.Volo.Abp.Identity.OrganizationUnits.Dto.GetOrganizationUnitInput)">
            <summary>
            获取未关联组织的角色
            </summary>
            <param name="ouid"></param>
            <param name="input"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.GetRoleNamesAsync(System.Guid)">
            <summary>
            获取组织关联的角色名称
            </summary>
            <param name="ouid"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.AddRolesAsync(System.Guid,Tiger.Volo.Abp.Identity.OrganizationUnits.Dto.OrganizationUnitAddRolesDto)">
            <summary>
            添加组织关联的角色
            </summary>
            <param name="ouid"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.RemoveRoleAsync(System.Guid,System.Guid)">
            <summary>
            移除组织关联的角色
            </summary>
            <param name="ouid"></param>
            <param name="roleId"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.GetUnaddedUsersAsync(System.Guid,Tiger.Volo.Abp.Identity.OrganizationUnits.Dto.GetOrganizationUnitInput)">
            <summary>
            获取未关联组织的用户列表
            </summary>
            <param name="ouid"></param>
            <param name="input"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.GetUsersAsync(System.Nullable{System.Guid},Volo.Abp.Identity.GetIdentityUsersInput)">
            <summary>
            获取组织机构关联的用户
            </summary>
            <param name="ouId"></param>
            <param name="usersInput"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.AddUsersAsync(System.Guid,Tiger.Volo.Abp.Identity.OrganizationUnits.Dto.OrganizationUnitAddUsersDto)">
            <summary>
            组织关联多个用户
            </summary>
            <param name="ouid"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.RemoveUserAsync(System.Guid,System.Guid)">
            <summary>
            移除组织关联的用户
            </summary>
            <param name="ouId"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.UploadFile(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            上传 文件,并返回相对url(不包含 host port wwwroot)
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="T:Volo.Abp.Identity.TigerIdentityRoleController">
            <summary>
            角色
            </summary>
        </member>
        <member name="M:Volo.Abp.Identity.TigerIdentityRoleController.GetListAsync(Tiger.Volo.Abp.Identity.ClaimTypes.Dto.GetIdentityRolesInput)">
            <summary>
            查询角色列表
            </summary>
            <param name="input"></param>
            <returns></returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Volo.Abp.Identity.TigerIdentityRoleController.ExportRolesToXlsxAsync(Tiger.Volo.Abp.Identity.ClaimTypes.Dto.GetIdentityRolesInput)">
            <summary>
            导出角色
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.TigerIdentityRoleController.MoveAllUsers(System.Guid,System.Guid,System.Boolean)">
            <summary>
            移动当前角色用户到目标角色
            </summary>
            <param name="roleId"></param>
            <param name="targetRoleId"></param>
            <param name="cancelAssign"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.TigerIdentityRoleController.AddToOrganizationUnitAsync(System.Guid,System.Guid)">
            <summary>
            将角色关联组织
            </summary>
            <param name="roleId"></param>
            <param name="ouId"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.TigerIdentityRoleController.CreateAsync(Tiger.Volo.Abp.Identity.OrganizationUnits.Dto.IdentityRoleOrgCreateDto)">
            <summary>
            添加角色关联组织单元
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.TigerIdentityRoleController.AddClaimAsync(System.Guid,Tiger.Volo.Abp.Identity.Roles.Dto.IdentityRoleClaimCreateDto)">
            <summary>
            添加角色声明
            </summary>
            <param name="roleId">角色id</param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.TigerIdentityRoleController.UpdateClaimAsync(System.Guid,Tiger.Volo.Abp.Identity.Roles.Dto.IdentityRoleClaimUpdateDto)">
            <summary>
            更新角色声明
            </summary>
            <param name="roleId"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.TigerIdentityRoleController.DeleteClaimAsync(System.Guid,Tiger.Volo.Abp.Identity.Roles.Dto.IdentityRoleClaimDeleteDto)">
            <summary>
            删除角色声明
            </summary>
            <param name="roleId"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.TigerIdentityRoleController.GetClaimsAsync(System.Guid)">
            <summary>
            获取角色声明
            </summary>
            <param name="roleId">角色id</param>
            <returns></returns>
        </member>
    </members>
</doc>
