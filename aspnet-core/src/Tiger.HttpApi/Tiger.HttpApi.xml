<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tiger.HttpApi</name>
    </assembly>
    <members>
        <member name="T:Tiger.Controllers.Admin.Basics.CategoryController">
            <summary>
            产品分类
            </summary>
        </member>
        <member name="M:Tiger.Controllers.Admin.Basics.CategoryController.CreateAsync(Tiger.Basic.Categorys.CreateUpdateCategoryDto)">
            <summary>
            添加
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Controllers.Admin.Basics.CategoryController.DeleteAsync(System.Guid)">
            <summary>
            删除
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Controllers.Admin.Basics.CategoryController.GetAsync(System.Guid)">
            <summary>
            获取单条
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Controllers.Admin.Basics.CategoryController.GetListAsync(Tiger.Basic.Categorys.GetCategoryListDto)">
            <summary>
            获取列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Controllers.Admin.Basics.CategoryController.UpdateAsync(System.Guid,Tiger.Basic.Categorys.CreateUpdateCategoryDto)">
            <summary>
            修改
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Controllers.Admin.Basics.CategoryController.GetAllListAsync(Tiger.Basic.Categorys.GetCategoryListDto)">
            <summary>
            获取分类列表树
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Controllers.Admin.Basics.CategoryController.GetDetailsAsync(System.Guid)">
            <summary>
            获取分类明细树
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Controllers.Admin.Basics.CategoryController.GetChildrenAsync(System.Guid)">
            <summary>
            根据父级id查找子分类
            </summary>
            <param name="parentId"></param>
            <returns></returns>
        </member>
        <member name="T:Tiger.Controllers.Admin.OrderController">
            <summary>
            订单管理
            </summary>
        </member>
        <member name="T:Tiger.Volo.Abp.Identity.TigerIdentityUserController">
            <summary>
            用户管理
            </summary>
        </member>
        <member name="M:Tiger.Volo.Abp.Identity.TigerIdentityUserController.AddToOrganizationUnitsAsync(System.Guid,System.Collections.Generic.List{System.Guid})">
            <summary>
            将用户关联组织
            </summary>
            <param name="userId"></param>
            <param name="ouIds"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.Identity.TigerIdentityUserController.CreateAsync(Volo.Abp.Identity.IdentityUserOrgCreateDto)">
            <summary>
            添加用户同时关联组织
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.Identity.TigerIdentityUserController.GetListOrganizationUnitsAsync(System.Guid,System.Boolean)">
            <summary>
            获取用户关联的组织单元
            </summary>
            <param name="id"></param>
            <param name="includeDetails"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.Identity.TigerIdentityUserController.UpdateAsync(System.Guid,Volo.Abp.Identity.IdentityUserOrgUpdateDto)">
            <summary>
            修改用户
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Volo.Abp.AuditLogging.AuditLogController">
            <summary>
            系统日志
            </summary>
        </member>
        <member name="M:Volo.Abp.AuditLogging.AuditLogController.DeleteAsync(System.Guid)">
            <summary>
            删除一条
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.AuditLogging.AuditLogController.DeleteManyAsync(System.Guid[])">
            <summary>
            删除多条
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.AuditLogging.AuditLogController.GetAsync(System.Guid)">
            <summary>
            获取单条日志
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.AuditLogging.AuditLogController.GetListAsync(Volo.Abp.AuditLogging.GetAuditLogDto)">
            <summary>
            获取系统日志列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Volo.Abp.Identity.OrganizationUnitController">
             <summary>
             组织架构
             </summary>
             <remarks>
             Sample request:
            
                 POST /Todo
                 {
                    "id": 1,
                    "name": "Item1",
                    "isComplete": true
                 }
            
             </remarks>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.CreateAsync(Volo.Abp.Identity.OrganizationUnitCreateDto)">
             <summary>
             添加组织
             </summary>
             <param name="input"></param>
             <returns></returns>
             <remarks>
             Sample request:
            
                 POST /Todo
                 {
                    "id": 1,
                    "name": "Item1",
                    "isComplete": true
                 }
            
             </remarks>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.DeleteAsync(System.Guid)">
            <summary>
            删除组织
            </summary>
            <param name="id">Guid</param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.GetAllListAsync(Volo.Abp.Identity.GetAllOrgnizationUnitInput)">
            <summary>
            获取所有组织
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.GetAsync(System.Guid)">
            <summary>
            获取明细
            </summary>
            <param name="id">Guid</param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.GetListAsync(Volo.Abp.Identity.GetOrganizationUnitInput)">
            <summary>
            获取组织列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.UpdateAsync(System.Guid,Volo.Abp.Identity.OrganizationUnitUpdateDto)">
            <summary>
            修改组织
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.GetDetailsAsync(System.Guid)">
            <summary>
            获取组织id查询组织树
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.GetListDetailsAsync(Volo.Abp.Identity.GetOrganizationUnitInput)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.GetChildrenAsync(System.Guid)">
            <summary>
            根据父级id获取组织
            </summary>
            <param name="parentId"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.GetRootListAsync">
            <summary>
            获取根组织
            </summary>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.GetUsersAsync(System.Nullable{System.Guid},Volo.Abp.Identity.GetIdentityUsersInput)">
            <summary>
            获取用户关联的组织机构
            </summary>
            <param name="ouId"></param>
            <param name="usersInput"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.GetRolesAsync(System.Nullable{System.Guid},Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto)">
            <summary>
            获取组织机构关联的角色
            </summary>
            <param name="ouId">组织id</param>
            <param name="roleInput">角色</param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.UploadFile(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            上传 文件,并返回相对url(不包含 host port wwwroot)
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.TigerIdentityRoleController.AddToOrganizationUnitAsync(System.Guid,System.Guid)">
            <summary>
            将角色关联组织
            </summary>
            <param name="roleId"></param>
            <param name="ouId"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.TigerIdentityRoleController.CreateAsync(Volo.Abp.Identity.IdentityRoleOrgCreateDto)">
            <summary>
            添加角色关联组织单元
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
    </members>
</doc>
