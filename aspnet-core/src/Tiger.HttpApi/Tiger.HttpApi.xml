<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tiger.HttpApi</name>
    </assembly>
    <members>
        <member name="T:Tiger.Module.System.CacheController">
            <summary>
            缓存管理
            </summary>
        </member>
        <member name="T:Tiger.Module.System.LanguageController">
            <summary>
            语言管理
            </summary>
        </member>
        <member name="M:Tiger.Module.System.LanguageController.CreateAsync(Tiger.Module.System.Localization.Dtos.LanguageTextDto)">
            <summary>
            添加语言
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.LanguageController.DeleteAsync(System.Guid)">
            <summary>
            删除语言
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.LanguageController.GetListAsync(Tiger.Module.System.Localization.Dtos.LanguageGetListInput)">
            <summary>
            获取语言列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.LanguageController.UpdateAsync(System.Guid,Tiger.Module.System.Localization.Dtos.UpdateLanguageDto)">
            <summary>
            更新语言
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Tiger.Module.System.LanguageTextController">
            <summary>
            语言文本管理
            </summary>
        </member>
        <member name="T:Tiger.Module.System.TextTemplateController">
            <summary>
            文本模板
            </summary>
        </member>
        <member name="M:Tiger.Module.System.TextTemplateController.GetAsync(System.String)">
            <summary>
            获取文本模板定义
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.TextTemplateController.GetContentAsync(Tiger.Module.System.TextTemplate.Dtos.TextTemplateContentGetInput)">
            <summary>
            获取文本模板内容
            </summary>
            <param name="input"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Tiger.Module.System.TextTemplateController.GetListAsync(Tiger.Module.System.TextTemplate.Dtos.TextTemplateGetListInput)">
            <summary>
            获取文本模板分页列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.TextTemplateController.RestoreToDefaultAsync(Tiger.Module.System.TextTemplate.Dtos.TextTemplateRestoreInput)">
            <summary>
            重置默认值
            </summary>
            <param name="restoreInput"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Module.System.TextTemplateController.UpdateAsync(Tiger.Module.System.TextTemplate.Dtos.TextTemplateUpdateInput)">
            <summary>
            更新文本模板定义
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Tiger.TigerHttpApiModule">
            <summary>
            用于定义API控制器.
            </summary>
        </member>
        <member name="T:Tiger.Volo.Abp.IdentityServer.ApiResourceController">
            <summary>
            Api资源
            </summary>
        </member>
        <member name="T:Tiger.Volo.Abp.IdentityServer.ClientController">
            <summary>
            IdentityServer客户端
            </summary>
        </member>
        <member name="M:Tiger.Volo.Abp.IdentityServer.ClientController.CloneAsync(System.Guid,Tiger.Volo.Abp.IdentityServer.Clients.Dto.ClientCloneDto)">
            <summary>
            克隆客户端
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Tiger.Volo.Abp.IdentityServer.ClientController.CreateAsync(Tiger.Volo.Abp.IdentityServer.Clients.Dto.CreateUpdateClientDto)">
            <summary>
            新增客户端
            </summary>
            <param name="input"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Tiger.Volo.Abp.IdentityServer.ClientController.DeleteAsync(System.Guid)">
            <summary>
            删除客户端
            </summary>
            <param name="id"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Tiger.Volo.Abp.IdentityServer.ClientController.GetAllDistinctAllowedCorsOriginsAsync">
            <summary>
            获取所有跨域地址
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Tiger.Volo.Abp.IdentityServer.ClientController.GetAssignableApiResourceAsync">
            <summary>
            获取可用的Api资源列表
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Tiger.Volo.Abp.IdentityServer.ClientController.GetAssignableIdentityResourceAsync">
            <summary>
            获取可用的身份资源
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Tiger.Volo.Abp.IdentityServer.ClientController.GetAsync(System.Guid)">
            <summary>
            获取客户端详情
            </summary>
            <param name="id"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Tiger.Volo.Abp.IdentityServer.ClientController.GetListAsync(Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto)">
            <summary>
            获取客户端列表
            </summary>
            <param name="input"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Tiger.Volo.Abp.IdentityServer.ClientController.UpdateAsync(System.Guid,Tiger.Volo.Abp.IdentityServer.Clients.Dto.CreateUpdateClientDto)">
            <summary>
            更新客户端
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Tiger.Volo.Abp.IdentityServer.DeviceFlowCodeController">
            <summary>
            设备流代码
            </summary>
        </member>
        <member name="T:Tiger.Volo.Abp.IdentityServer.IdentityResourceController">
            <summary>
            标识资源
            </summary>
        </member>
        <member name="M:Tiger.Volo.Abp.IdentityServer.IdentityResourceController.CreateAsync(Tiger.Volo.Abp.IdentityServer.IdentityResources.Dto.CreateUpdateIdentityResourceDto)">
            <summary>
            创建标识资源
            </summary>
            <param name="input"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Tiger.Volo.Abp.IdentityServer.IdentityResourceController.DeleteAsync(System.Guid)">
            <summary>
            删除标识资源
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.IdentityServer.IdentityResourceController.GetAsync(System.Guid)">
            <summary>
            获取标识资源
            </summary>
            <param name="id"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Tiger.Volo.Abp.IdentityServer.IdentityResourceController.GetListAsync(Tiger.Volo.Abp.IdentityServer.IdentityResources.Dto.GetIdentityResourceDto)">
            <summary>
            获取标识资源列表
            </summary>
            <param name="input"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Tiger.Volo.Abp.IdentityServer.IdentityResourceController.UpdateAsync(System.Guid,Tiger.Volo.Abp.IdentityServer.IdentityResources.Dto.CreateUpdateIdentityResourceDto)">
            <summary>
            更新标识资源
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Tiger.Volo.Abp.IdentityServer.PersistedGrantController">
            <summary>
            持续授权
            </summary>
        </member>
        <member name="T:Tiger.Volo.Abp.Identity.ClaimTypeController">
            <summary>
            声明类型
            </summary>
        </member>
        <member name="M:Tiger.Volo.Abp.Identity.ClaimTypeController.DeleteAsync(System.Guid)">
            <summary>
             删除
            </summary>
            <param name="id"></param>
            <returns></returns>
            <remarks>
            默认将id放到路由当中
            </remarks>
        </member>
        <member name="M:Tiger.Volo.Abp.Identity.ClaimTypeController.GetAllListAsync">
            <summary>
            获取所有声明类型
            </summary>
            <returns></returns>
        </member>
        <member name="T:Tiger.Volo.Abp.Identity.IdentitySecurityLogController">
            <summary>
            安全日志
            </summary>
        </member>
        <member name="M:Tiger.Volo.Abp.Identity.IdentitySecurityLogController.DeleteAsync(System.Guid)">
            <summary>
            删除安全日志
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.Identity.IdentitySecurityLogController.GetAsync(System.Guid)">
            <summary>
            获取安全日志明细
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.Identity.IdentitySecurityLogController.GetListAsync(Tiger.Volo.Abp.Identity.IdentitySecurityLogs.Dto.GetIdentitySecurityLogInput)">
            <summary>
            获取安全日志列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Tiger.Volo.Abp.Identity.TigerIdentityUserController">
            <summary>
            用户管理
            </summary>
        </member>
        <member name="M:Tiger.Volo.Abp.Identity.TigerIdentityUserController.AddToOrganizationUnitsAsync(System.Guid,System.Collections.Generic.List{System.Guid})">
            <summary>
            将用户关联组织
            </summary>
            <param name="userId"></param>
            <param name="ouIds"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.Identity.TigerIdentityUserController.CreateAsync(Tiger.Volo.Abp.Identity.OrganizationUnits.Dto.IdentityUserOrgCreateDto)">
            <summary>
            添加用户同时关联组织
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.Identity.TigerIdentityUserController.GetListOrganizationUnitsAsync(System.Guid,System.Boolean)">
            <summary>
            获取用户关联的组织单元
            </summary>
            <param name="id"></param>
            <param name="includeDetails"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.Identity.TigerIdentityUserController.UpdateAsync(System.Guid,Tiger.Volo.Abp.Identity.OrganizationUnits.Dto.IdentityUserOrgUpdateDto)">
            <summary>
            修改用户
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.Identity.TigerIdentityUserController.ChangePasswordAsync(System.Guid,Tiger.Volo.Abp.Identity.Users.Dto.IdentityUserSetPasswordInput)">
            <summary>
            修改用户密码
            </summary>
            <param name="id">用户id</param>
            <param name="input"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Tiger.Volo.Abp.Identity.TigerIdentityUserController.LockAsync(System.Guid,System.Int32)">
            <summary>
            锁定用户
            </summary>
            <param name="id">用户id</param>
            <param name="seconds">锁定时长单位 秒</param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.Identity.TigerIdentityUserController.UnlockAsync(System.Guid)">
            <summary>
            解锁用户
            </summary>
            <param name="id">用户id</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Tiger.Volo.Abp.Sass.EditionController">
            <summary>
            版本
            </summary>
        </member>
        <member name="T:Tiger.Volo.Abp.Sass.TenantController">
            <summary>
            租户
            </summary>
            <remarks>
            换一个模块重新定义名称一样的控制器，但是服务的名称可以是和原来一样的。
            </remarks>
        </member>
        <member name="M:Tiger.Volo.Abp.Setting.EmailSettingsController.GetAsync">
            <summary>
            获取邮件配置
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.Setting.EmailSettingsController.UpdateAsync(Tiger.Volo.Abp.SettingManagementAppService.UpdateEmailSettingsDto)">
            <summary>
            更新邮件配置
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.Setting.EmailSettingsController.SendTestEmailAsync(Tiger.Volo.Abp.SettingManagementAppService.SendTestEmailInput)">
            <summary>
            发送测试邮件
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Tiger.Volo.Abp.Setting.SettingController">
            <summary>
            系统设置
            </summary>
        </member>
        <member name="M:Tiger.Volo.Abp.Setting.SettingController.FindAsync(System.String,System.String,System.String)">
            <summary>
            查询单个设置值
            </summary>
            <param name="name"></param>
            <param name="providerName"></param>
            <param name="providerKey"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.Setting.SettingController.GetAllAsync(System.String,System.String)">
            <summary>
            获取设置列表
            </summary>
            <param name="providerName"></param>
            <param name="providerKey"></param>
            <returns></returns>
        </member>
        <member name="M:Tiger.Volo.Abp.Setting.SettingController.SetAsync(System.String,System.String,System.String,System.String)">
            <summary>
            增加设置
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <param name="providerName"></param>
            <param name="providerKey"></param>
            <returns></returns>
        </member>
        <member name="T:Volo.Abp.AuditLogging.AuditLogController">
            <summary>
            系统日志
            </summary>
        </member>
        <member name="M:Volo.Abp.AuditLogging.AuditLogController.DeleteAsync(System.Guid)">
            <summary>
            删除一条
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.AuditLogging.AuditLogController.DeleteManyAsync(System.Guid[])">
            <summary>
            删除多条
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.AuditLogging.AuditLogController.GetAsync(System.Guid)">
            <summary>
            获取单条日志
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.AuditLogging.AuditLogController.GetListAsync(Tiger.Volo.Abp.AuditLogging.Dto.GetAuditLogDto)">
            <summary>
            获取系统日志列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.AuditLogging.AuditLogController.GetAverageExecutionDurationPerDayAsync(System.DateTime,System.DateTime)">
            <summary>
            每日请求平均执行时间
            </summary>
            <param name="startDate">开始日期</param>
            <param name="endDate">结束日期</param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.AuditLogging.AuditLogController.GetEntityChangeAsync(System.Guid)">
            <summary>
            获取实体变更明细
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.AuditLogging.AuditLogController.GetEntityChangeListAsync(Tiger.Volo.Abp.AuditLogging.Dto.GetEntityChangeDto)">
            <summary>
            获取实体变更列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.AuditLogging.AuditLogController.GetEntityChangesWithUsernameAsync(Tiger.Volo.Abp.AuditLogging.Dto.GetEntityChangeWithUsernameDto)">
            <summary>
            获取实体变更及操作人列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.AuditLogging.AuditLogController.GetEntityChangeWithUsernameAsync(System.Guid)">
            <summary>
            获取实体变更及操作人明细
            </summary>
            <param name="entityChangeId"></param>
            <returns></returns>
        </member>
        <member name="T:Volo.Abp.Identity.OrganizationUnitController">
            <summary>
            组织架构服务
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.CreateAsync(Tiger.Volo.Abp.Identity.OrganizationUnits.Dto.OrganizationUnitCreateDto)">
            <summary>
            添加组织
            </summary>
            <param name="input"></param>
            <returns></returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.DeleteAsync(System.Guid)">
            <summary>
            删除组织
            </summary>
            <param name="id">Guid</param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.GetAsync(System.Guid)">
            <summary>
            获取明细
            </summary>
            <param name="id">Guid</param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.GetListAsync(Tiger.Volo.Abp.Identity.OrganizationUnits.Dto.GetOrganizationUnitInput)">
            <summary>
            获取组织列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.GetAllListAsync(Tiger.Volo.Abp.Identity.OrganizationUnits.Dto.GetAllOrgnizationUnitInput)">
            <summary>
            获取所有组织（树结构）
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.GetRootAsync">
            <summary>
            获取根组织
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.FindChildrenAsync(Tiger.Volo.Abp.Identity.OrganizationUnits.Dto.GetOrganizationUnitChildrenDto)">
            <summary>
            获取子节点
            </summary>
            <param name="input"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.GetLastChildOrNullAsync(System.Nullable{System.Guid})">
            <summary>
            获取最后的子节点
            </summary>
            <param name="parentId"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.GetNextChildCodeAsync(System.Nullable{System.Guid})">
            <summary>
            获取下一个子节点的组织编码
            </summary>
            <param name="parentId"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.UpdateAsync(System.Guid,Tiger.Volo.Abp.Identity.OrganizationUnits.Dto.OrganizationUnitUpdateDto)">
            <summary>
            修改组织
            </summary>
            <param name="id"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.MoveAsync(System.Guid,System.Nullable{System.Guid})">
            <summary>
            将组织移动到指定父节点
            </summary>
            <param name="id"></param>
            <param name="parentId"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.GetDetailsAsync(System.Guid)">
            <summary>
            获取组织id查询单个组织(包含子节点的树结构)
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.GetRolesAsync(System.Nullable{System.Guid},Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto)">
            <summary>
            获取组织机构关联的角色
            </summary>
            <param name="ouId">组织id</param>
            <param name="roleInput">角色</param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.GetUnaddedRolesAsync(System.Guid,Tiger.Volo.Abp.Identity.OrganizationUnits.Dto.GetOrganizationUnitInput)">
            <summary>
            获取未关联组织的角色
            </summary>
            <param name="ouid"></param>
            <param name="input"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.GetRoleNamesAsync(System.Guid)">
            <summary>
            获取组织关联的角色名称
            </summary>
            <param name="ouid"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.AddRolesAsync(System.Guid,Tiger.Volo.Abp.Identity.OrganizationUnits.Dto.OrganizationUnitAddRolesDto)">
            <summary>
            添加组织关联的角色
            </summary>
            <param name="ouid"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.RemoveRoleAsync(System.Guid,System.Guid)">
            <summary>
            移除组织关联的角色
            </summary>
            <param name="ouid"></param>
            <param name="roleId"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.GetUnaddedUsersAsync(System.Guid,Tiger.Volo.Abp.Identity.OrganizationUnits.Dto.GetOrganizationUnitInput)">
            <summary>
            获取未关联组织的用户列表
            </summary>
            <param name="ouid"></param>
            <param name="input"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.GetUsersAsync(System.Nullable{System.Guid},Volo.Abp.Identity.GetIdentityUsersInput)">
            <summary>
            获取组织机构关联的用户
            </summary>
            <param name="ouId"></param>
            <param name="usersInput"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.AddUsersAsync(System.Guid,Tiger.Volo.Abp.Identity.OrganizationUnits.Dto.OrganizationUnitAddUsersDto)">
            <summary>
            组织关联多个用户
            </summary>
            <param name="ouid"></param>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.RemoveUserAsync(System.Guid,System.Guid)">
            <summary>
            移除组织关联的用户
            </summary>
            <param name="ouId"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.OrganizationUnitController.UploadFile(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            上传 文件,并返回相对url(不包含 host port wwwroot)
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.TigerIdentityRoleController.AddToOrganizationUnitAsync(System.Guid,System.Guid)">
            <summary>
            将角色关联组织
            </summary>
            <param name="roleId"></param>
            <param name="ouId"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.TigerIdentityRoleController.CreateAsync(Tiger.Volo.Abp.Identity.OrganizationUnits.Dto.IdentityRoleOrgCreateDto)">
            <summary>
            添加角色关联组织单元
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Volo.Abp.Identity.TigerIdentityRoleController.GetListAsync(Tiger.Volo.Abp.Identity.ClaimTypes.Dto.GetIdentityRolesInput)">
            <summary>
            查询角色列表
            </summary>
            <param name="input"></param>
            <returns></returns>
            <remarks>
            </remarks>
        </member>
    </members>
</doc>
