{
  "modules": {
    "abp": {
      "rootPath": "abp",
      "remoteServiceName": "abp",
      "controllers": {
        "Pages.Abp.MultiTenancy.AbpTenantController": {
          "controllerName": "AbpTenant",
          "type": "Pages.Abp.MultiTenancy.AbpTenantController",
          "interfaces": [
            {
              "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.IAbpTenantAppService"
            }
          ],
          "actions": {
            "FindTenantByNameAsyncByName": {
              "uniqueName": "FindTenantByNameAsyncByName",
              "name": "FindTenantByNameAsync",
              "httpMethod": "GET",
              "url": "api/abp/multi-tenancy/tenants/by-name/{name}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "name",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "name",
                  "name": "name",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto",
                "typeSimple": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto"
              }
            },
            "FindTenantByIdAsyncById": {
              "uniqueName": "FindTenantByIdAsyncById",
              "name": "FindTenantByIdAsync",
              "httpMethod": "GET",
              "url": "api/abp/multi-tenancy/tenants/by-id/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto",
                "typeSimple": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto"
              }
            }
          }
        },
        "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationController": {
          "controllerName": "AbpApplicationConfiguration",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationController",
          "interfaces": [
            {
              "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IAbpApplicationConfigurationAppService"
            }
          ],
          "actions": {
            "GetAsync": {
              "uniqueName": "GetAsync",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/abp/application-configuration",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationDto",
                "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationDto"
              }
            }
          }
        },
        "Volo.Abp.AspNetCore.Mvc.ApiExploring.AbpApiDefinitionController": {
          "controllerName": "AbpApiDefinition",
          "type": "Volo.Abp.AspNetCore.Mvc.ApiExploring.AbpApiDefinitionController",
          "interfaces": [],
          "actions": {
            "GetByModel": {
              "uniqueName": "GetByModel",
              "name": "Get",
              "httpMethod": "GET",
              "url": "api/abp/api-definition",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "model",
                  "typeAsString": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModelRequestDto, Volo.Abp.Http",
                  "type": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModelRequestDto",
                  "typeSimple": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModelRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "model",
                  "name": "IncludeTypes",
                  "type": "System.Boolean",
                  "typeSimple": "boolean",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "model"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModel",
                "typeSimple": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModel"
              }
            }
          }
        }
      }
    },
    "app": {
      "rootPath": "app",
      "remoteServiceName": "Default",
      "controllers": {
        "TigerAdmin.Books.BookAppService": {
          "controllerName": "Book",
          "type": "TigerAdmin.Books.BookAppService",
          "interfaces": [
            {
              "type": "Volo.Abp.Validation.IValidationEnabled"
            },
            {
              "type": "Volo.Abp.Auditing.IAuditingEnabled"
            },
            {
              "type": "TigerAdmin.Books.IBookAppService"
            }
          ],
          "actions": {
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/book",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "TigerAdmin.Books.CreateUpdateBookDto, TigerAdmin.Application.Contracts",
                  "type": "TigerAdmin.Books.CreateUpdateBookDto",
                  "typeSimple": "TigerAdmin.Books.CreateUpdateBookDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "TigerAdmin.Books.CreateUpdateBookDto",
                  "typeSimple": "TigerAdmin.Books.CreateUpdateBookDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "TigerAdmin.Books.BookDto",
                "typeSimple": "TigerAdmin.Books.BookDto"
              }
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/book/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "TigerAdmin.Books.CreateUpdateBookDto, TigerAdmin.Application.Contracts",
                  "type": "TigerAdmin.Books.CreateUpdateBookDto",
                  "typeSimple": "TigerAdmin.Books.CreateUpdateBookDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "TigerAdmin.Books.CreateUpdateBookDto",
                  "typeSimple": "TigerAdmin.Books.CreateUpdateBookDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "TigerAdmin.Books.BookDto",
                "typeSimple": "TigerAdmin.Books.BookDto"
              }
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/book/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/book/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "TigerAdmin.Books.BookDto",
                "typeSimple": "TigerAdmin.Books.BookDto"
              }
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/book",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto, Volo.Abp.Ddd.Application.Contracts",
                  "type": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                  "typeSimple": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<TigerAdmin.Books.BookDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<TigerAdmin.Books.BookDto>"
              }
            }
          }
        }
      }
    },
    "featureManagement": {
      "rootPath": "featureManagement",
      "remoteServiceName": "AbpFeatureManagement",
      "controllers": {
        "Volo.Abp.FeatureManagement.FeaturesController": {
          "controllerName": "Features",
          "type": "Volo.Abp.FeatureManagement.FeaturesController",
          "interfaces": [
            {
              "type": "Volo.Abp.FeatureManagement.IFeatureAppService"
            }
          ],
          "actions": {
            "GetAsyncByProviderNameAndProviderKey": {
              "uniqueName": "GetAsyncByProviderNameAndProviderKey",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/feature-management/features",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "providerName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "providerKey",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "providerName",
                  "name": "providerName",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "providerKey",
                  "name": "providerKey",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.FeatureManagement.GetFeatureListResultDto",
                "typeSimple": "Volo.Abp.FeatureManagement.GetFeatureListResultDto"
              }
            },
            "UpdateAsyncByProviderNameAndProviderKeyAndInput": {
              "uniqueName": "UpdateAsyncByProviderNameAndProviderKeyAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/feature-management/features",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "providerName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "providerKey",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.FeatureManagement.UpdateFeaturesDto, Volo.Abp.FeatureManagement.Application.Contracts",
                  "type": "Volo.Abp.FeatureManagement.UpdateFeaturesDto",
                  "typeSimple": "Volo.Abp.FeatureManagement.UpdateFeaturesDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "providerName",
                  "name": "providerName",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "providerKey",
                  "name": "providerKey",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.FeatureManagement.UpdateFeaturesDto",
                  "typeSimple": "Volo.Abp.FeatureManagement.UpdateFeaturesDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        }
      }
    },
    "account": {
      "rootPath": "account",
      "remoteServiceName": "AbpAccount",
      "controllers": {
        "Volo.Abp.Account.Web.Areas.Account.Controllers.AccountController": {
          "controllerName": "Account",
          "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.AccountController",
          "interfaces": [],
          "actions": {
            "LoginByLogin": {
              "uniqueName": "LoginByLogin",
              "name": "Login",
              "httpMethod": "POST",
              "url": "api/account/login",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "login",
                  "typeAsString": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo, Volo.Abp.Account.Web",
                  "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "login",
                  "name": "login",
                  "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.AbpLoginResult",
                "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.AbpLoginResult"
              }
            },
            "Logout": {
              "uniqueName": "Logout",
              "name": "Logout",
              "httpMethod": "GET",
              "url": "api/account/logout",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "CheckPasswordByLogin": {
              "uniqueName": "CheckPasswordByLogin",
              "name": "CheckPassword",
              "httpMethod": "POST",
              "url": "api/account/checkPassword",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "login",
                  "typeAsString": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo, Volo.Abp.Account.Web",
                  "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "login",
                  "name": "login",
                  "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.AbpLoginResult",
                "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.AbpLoginResult"
              }
            }
          }
        },
        "Volo.Abp.Account.AccountController": {
          "controllerName": "Account",
          "type": "Volo.Abp.Account.AccountController",
          "interfaces": [
            {
              "type": "Volo.Abp.Account.IAccountAppService"
            }
          ],
          "actions": {
            "RegisterAsyncByInput": {
              "uniqueName": "RegisterAsyncByInput",
              "name": "RegisterAsync",
              "httpMethod": "POST",
              "url": "api/account/register",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Account.RegisterDto, Volo.Abp.Account.Application.Contracts",
                  "type": "Volo.Abp.Account.RegisterDto",
                  "typeSimple": "Volo.Abp.Account.RegisterDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.Account.RegisterDto",
                  "typeSimple": "Volo.Abp.Account.RegisterDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              }
            },
            "SendPasswordResetCodeAsyncByInput": {
              "uniqueName": "SendPasswordResetCodeAsyncByInput",
              "name": "SendPasswordResetCodeAsync",
              "httpMethod": "POST",
              "url": "api/account/send-password-reset-code",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Account.SendPasswordResetCodeDto, Volo.Abp.Account.Application.Contracts",
                  "type": "Volo.Abp.Account.SendPasswordResetCodeDto",
                  "typeSimple": "Volo.Abp.Account.SendPasswordResetCodeDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.Account.SendPasswordResetCodeDto",
                  "typeSimple": "Volo.Abp.Account.SendPasswordResetCodeDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "ResetPasswordAsyncByInput": {
              "uniqueName": "ResetPasswordAsyncByInput",
              "name": "ResetPasswordAsync",
              "httpMethod": "POST",
              "url": "api/account/reset-password",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Account.ResetPasswordDto, Volo.Abp.Account.Application.Contracts",
                  "type": "Volo.Abp.Account.ResetPasswordDto",
                  "typeSimple": "Volo.Abp.Account.ResetPasswordDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.Account.ResetPasswordDto",
                  "typeSimple": "Volo.Abp.Account.ResetPasswordDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        }
      }
    },
    "multi-tenancy": {
      "rootPath": "multi-tenancy",
      "remoteServiceName": "AbpTenantManagement",
      "controllers": {
        "Volo.Abp.TenantManagement.TenantController": {
          "controllerName": "Tenant",
          "type": "Volo.Abp.TenantManagement.TenantController",
          "interfaces": [
            {
              "type": "Volo.Abp.TenantManagement.ITenantAppService"
            }
          ],
          "actions": {
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/multi-tenancy/tenants/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.TenantManagement.TenantDto",
                "typeSimple": "Volo.Abp.TenantManagement.TenantDto"
              }
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/multi-tenancy/tenants",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.TenantManagement.GetTenantsInput, Volo.Abp.TenantManagement.Application.Contracts",
                  "type": "Volo.Abp.TenantManagement.GetTenantsInput",
                  "typeSimple": "Volo.Abp.TenantManagement.GetTenantsInput",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Filter",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.TenantManagement.TenantDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.TenantManagement.TenantDto>"
              }
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/multi-tenancy/tenants",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.TenantManagement.TenantCreateDto, Volo.Abp.TenantManagement.Application.Contracts",
                  "type": "Volo.Abp.TenantManagement.TenantCreateDto",
                  "typeSimple": "Volo.Abp.TenantManagement.TenantCreateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.TenantManagement.TenantCreateDto",
                  "typeSimple": "Volo.Abp.TenantManagement.TenantCreateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.TenantManagement.TenantDto",
                "typeSimple": "Volo.Abp.TenantManagement.TenantDto"
              }
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/multi-tenancy/tenants/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.TenantManagement.TenantUpdateDto, Volo.Abp.TenantManagement.Application.Contracts",
                  "type": "Volo.Abp.TenantManagement.TenantUpdateDto",
                  "typeSimple": "Volo.Abp.TenantManagement.TenantUpdateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.TenantManagement.TenantUpdateDto",
                  "typeSimple": "Volo.Abp.TenantManagement.TenantUpdateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.TenantManagement.TenantDto",
                "typeSimple": "Volo.Abp.TenantManagement.TenantDto"
              }
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/multi-tenancy/tenants/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "GetDefaultConnectionStringAsyncById": {
              "uniqueName": "GetDefaultConnectionStringAsyncById",
              "name": "GetDefaultConnectionStringAsync",
              "httpMethod": "GET",
              "url": "api/multi-tenancy/tenants/{id}/default-connection-string",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.String",
                "typeSimple": "string"
              }
            },
            "UpdateDefaultConnectionStringAsyncByIdAndDefaultConnectionString": {
              "uniqueName": "UpdateDefaultConnectionStringAsyncByIdAndDefaultConnectionString",
              "name": "UpdateDefaultConnectionStringAsync",
              "httpMethod": "PUT",
              "url": "api/multi-tenancy/tenants/{id}/default-connection-string",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "defaultConnectionString",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "defaultConnectionString",
                  "name": "defaultConnectionString",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "DeleteDefaultConnectionStringAsyncById": {
              "uniqueName": "DeleteDefaultConnectionStringAsyncById",
              "name": "DeleteDefaultConnectionStringAsync",
              "httpMethod": "DELETE",
              "url": "api/multi-tenancy/tenants/{id}/default-connection-string",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        }
      }
    },
    "identity": {
      "rootPath": "identity",
      "remoteServiceName": "AbpIdentity",
      "controllers": {
        "Volo.Abp.Identity.IdentityRoleController": {
          "controllerName": "IdentityRole",
          "type": "Volo.Abp.Identity.IdentityRoleController",
          "interfaces": [
            {
              "type": "Volo.Abp.Identity.IIdentityRoleAppService"
            }
          ],
          "actions": {
            "GetAllListAsync": {
              "uniqueName": "GetAllListAsync",
              "name": "GetAllListAsync",
              "httpMethod": "GET",
              "url": "api/identity/roles/all",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>"
              }
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/identity/roles",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto, Volo.Abp.Ddd.Application.Contracts",
                  "type": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                  "typeSimple": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityRoleDto>"
              }
            },
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/identity/roles/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityRoleDto",
                "typeSimple": "Volo.Abp.Identity.IdentityRoleDto"
              }
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/identity/roles",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.IdentityRoleCreateDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.IdentityRoleCreateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityRoleCreateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.Identity.IdentityRoleCreateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityRoleCreateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityRoleDto",
                "typeSimple": "Volo.Abp.Identity.IdentityRoleDto"
              }
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/identity/roles/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.IdentityRoleUpdateDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.IdentityRoleUpdateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityRoleUpdateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.Identity.IdentityRoleUpdateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityRoleUpdateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityRoleDto",
                "typeSimple": "Volo.Abp.Identity.IdentityRoleDto"
              }
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/identity/roles/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        },
        "Volo.Abp.Identity.IdentityUserController": {
          "controllerName": "IdentityUser",
          "type": "Volo.Abp.Identity.IdentityUserController",
          "interfaces": [
            {
              "type": "Volo.Abp.Identity.IIdentityUserAppService"
            }
          ],
          "actions": {
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              }
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/identity/users",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.GetIdentityUsersInput, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.GetIdentityUsersInput",
                  "typeSimple": "Volo.Abp.Identity.GetIdentityUsersInput",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Filter",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityUserDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityUserDto>"
              }
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/identity/users",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.IdentityUserCreateDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.IdentityUserCreateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserCreateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.Identity.IdentityUserCreateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserCreateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              }
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/identity/users/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.IdentityUserUpdateDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.IdentityUserUpdateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserUpdateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.Identity.IdentityUserUpdateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserUpdateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              }
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/identity/users/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "GetRolesAsyncById": {
              "uniqueName": "GetRolesAsyncById",
              "name": "GetRolesAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/{id}/roles",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>"
              }
            },
            "GetAssignableRolesAsync": {
              "uniqueName": "GetAssignableRolesAsync",
              "name": "GetAssignableRolesAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/assignable-roles",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>"
              }
            },
            "UpdateRolesAsyncByIdAndInput": {
              "uniqueName": "UpdateRolesAsyncByIdAndInput",
              "name": "UpdateRolesAsync",
              "httpMethod": "PUT",
              "url": "api/identity/users/{id}/roles",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.IdentityUserUpdateRolesDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.IdentityUserUpdateRolesDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserUpdateRolesDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.Identity.IdentityUserUpdateRolesDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserUpdateRolesDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "FindByUsernameAsyncByUserName": {
              "uniqueName": "FindByUsernameAsyncByUserName",
              "name": "FindByUsernameAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/by-username/{userName}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "userName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "userName",
                  "name": "userName",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              }
            },
            "FindByEmailAsyncByEmail": {
              "uniqueName": "FindByEmailAsyncByEmail",
              "name": "FindByEmailAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/by-email/{email}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "email",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "email",
                  "name": "email",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              }
            }
          }
        },
        "Volo.Abp.Identity.IdentityUserLookupController": {
          "controllerName": "IdentityUserLookup",
          "type": "Volo.Abp.Identity.IdentityUserLookupController",
          "interfaces": [
            {
              "type": "Volo.Abp.Identity.IIdentityUserLookupAppService"
            }
          ],
          "actions": {
            "FindByIdAsyncById": {
              "uniqueName": "FindByIdAsyncById",
              "name": "FindByIdAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/lookup/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Users.UserData",
                "typeSimple": "Volo.Abp.Users.UserData"
              }
            },
            "FindByUserNameAsyncByUserName": {
              "uniqueName": "FindByUserNameAsyncByUserName",
              "name": "FindByUserNameAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/lookup/by-username/{userName}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "userName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "userName",
                  "name": "userName",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Users.UserData",
                "typeSimple": "Volo.Abp.Users.UserData"
              }
            },
            "SearchAsyncByInput": {
              "uniqueName": "SearchAsyncByInput",
              "name": "SearchAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/lookup/search",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.UserLookupSearchInputDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.UserLookupSearchInputDto",
                  "typeSimple": "Volo.Abp.Identity.UserLookupSearchInputDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Filter",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Users.UserData>",
                "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Users.UserData>"
              }
            },
            "GetCountAsyncByInput": {
              "uniqueName": "GetCountAsyncByInput",
              "name": "GetCountAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/lookup/count",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.UserLookupCountInputDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.UserLookupCountInputDto",
                  "typeSimple": "Volo.Abp.Identity.UserLookupCountInputDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Filter",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "System.Int64",
                "typeSimple": "number"
              }
            }
          }
        },
        "Volo.Abp.Identity.ProfileController": {
          "controllerName": "Profile",
          "type": "Volo.Abp.Identity.ProfileController",
          "interfaces": [
            {
              "type": "Volo.Abp.Identity.IProfileAppService"
            }
          ],
          "actions": {
            "GetAsync": {
              "uniqueName": "GetAsync",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/identity/my-profile",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Volo.Abp.Identity.ProfileDto",
                "typeSimple": "Volo.Abp.Identity.ProfileDto"
              }
            },
            "UpdateAsyncByInput": {
              "uniqueName": "UpdateAsyncByInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/identity/my-profile",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.UpdateProfileDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.UpdateProfileDto",
                  "typeSimple": "Volo.Abp.Identity.UpdateProfileDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.Identity.UpdateProfileDto",
                  "typeSimple": "Volo.Abp.Identity.UpdateProfileDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.ProfileDto",
                "typeSimple": "Volo.Abp.Identity.ProfileDto"
              }
            },
            "ChangePasswordAsyncByInput": {
              "uniqueName": "ChangePasswordAsyncByInput",
              "name": "ChangePasswordAsync",
              "httpMethod": "POST",
              "url": "api/identity/my-profile/change-password",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.ChangePasswordInput, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.ChangePasswordInput",
                  "typeSimple": "Volo.Abp.Identity.ChangePasswordInput",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.Identity.ChangePasswordInput",
                  "typeSimple": "Volo.Abp.Identity.ChangePasswordInput",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        }
      }
    },
    "permissionManagement": {
      "rootPath": "permissionManagement",
      "remoteServiceName": "AbpPermissionManagement",
      "controllers": {
        "Volo.Abp.PermissionManagement.PermissionsController": {
          "controllerName": "Permissions",
          "type": "Volo.Abp.PermissionManagement.PermissionsController",
          "interfaces": [
            {
              "type": "Volo.Abp.PermissionManagement.IPermissionAppService"
            }
          ],
          "actions": {
            "GetAsyncByProviderNameAndProviderKey": {
              "uniqueName": "GetAsyncByProviderNameAndProviderKey",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/permission-management/permissions",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "providerName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "providerKey",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "providerName",
                  "name": "providerName",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "providerKey",
                  "name": "providerKey",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.PermissionManagement.GetPermissionListResultDto",
                "typeSimple": "Volo.Abp.PermissionManagement.GetPermissionListResultDto"
              }
            },
            "UpdateAsyncByProviderNameAndProviderKeyAndInput": {
              "uniqueName": "UpdateAsyncByProviderNameAndProviderKeyAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/permission-management/permissions",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "providerName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "providerKey",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.PermissionManagement.UpdatePermissionsDto, Volo.Abp.PermissionManagement.Application.Contracts",
                  "type": "Volo.Abp.PermissionManagement.UpdatePermissionsDto",
                  "typeSimple": "Volo.Abp.PermissionManagement.UpdatePermissionsDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "providerName",
                  "name": "providerName",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "providerKey",
                  "name": "providerKey",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.PermissionManagement.UpdatePermissionsDto",
                  "typeSimple": "Volo.Abp.PermissionManagement.UpdatePermissionsDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        }
      }
    }
  },
  "types": {}
}
































{
  "localization": {
    "values": {
      "AbpAuditLogging": {},
      "Default": {},
      "AbpLocalization": {
        "DisplayName:Abp.Localization.DefaultLanguage": "Default language",
        "Description:Abp.Localization.DefaultLanguage": "The default language of the application."
      },
      "AbpValidation": {
        "'{0}' and '{1}' do not match.": "'{0}' and '{1}' do not match.",
        "The {0} field is not a valid credit card number.": "The {0} field is not a valid credit card number.",
        "{0} is not valid.": "{0} is not valid.",
        "The {0} field is not a valid e-mail address.": "The {0} field is not a valid e-mail address.",
        "The {0} field only accepts files with the following extensions: {1}": "The {0} field only accepts files with the following extensions: {1}",
        "The field {0} must be a string or array type with a maximum length of '{1}'.": "The field {0} must be a string or array type with a maximum length of '{1}'.",
        "The field {0} must be a string or array type with a minimum length of '{1}'.": "The field {0} must be a string or array type with a minimum length of '{1}'.",
        "The {0} field is not a valid phone number.": "The {0} field is not a valid phone number.",
        "The field {0} must be between {1} and {2}.": "The field {0} must be between {1} and {2}.",
        "The field {0} must match the regular expression '{1}'.": "The field {0} does not match the requested format.",
        "The {0} field is required.": "The {0} field is required.",
        "The field {0} must be a string with a maximum length of {1}.": "The field {0} must be a string with a maximum length of {1}.",
        "The field {0} must be a string with a minimum length of {2} and a maximum length of {1}.": "The field {0} must be a string with a minimum length of {2} and a maximum length of {1}.",
        "The {0} field is not a valid fully-qualified http, https, or ftp URL.": "The {0} field is not a valid fully-qualified http, https, or ftp URL.",
        "The field {0} is invalid.": "The field {0} is invalid.",
        "ThisFieldIsNotAValidCreditCardNumber.": "This field is not a valid credit card number.",
        "ThisFieldIsNotValid.": "This field is not valid.",
        "ThisFieldIsNotAValidEmailAddress.": "This field is not a valid e-mail address.",
        "ThisFieldOnlyAcceptsFilesWithTheFollowingExtensions:{0}": "This field only accepts files with the following extensions: {0}",
        "ThisFieldMustBeAStringOrArrayTypeWithAMaximumLengthOf{0}": "This field must be a string or array type with a maximum length of '{0}'.",
        "ThisFieldMustBeAStringOrArrayTypeWithAMinimumLengthOf{0}": "This field must be a string or array type with a minimum length of '{0}'.",
        "ThisFieldIsNotAValidPhoneNumber.": "This field is not a valid phone number.",
        "ThisFieldMustBeBetween{0}And{1}": "This field must be between {0} and {1}.",
        "ThisFieldMustMatchTheRegularExpression{0}": "This field must match the regular expression '{0}'.",
        "ThisFieldIsRequired.": "This field is required.",
        "ThisFieldMustBeAStringWithAMaximumLengthOf{0}": "This field must be a string with a maximum length of {0}.",
        "ThisFieldMustBeAStringWithAMinimumLengthOf{1}AndAMaximumLengthOf{0}": "This field must be a string with a minimum length of {1} and a maximum length of {0}.",
        "ThisFieldIsNotAValidFullyQualifiedHttpHttpsOrFtpUrl": "This field is not a valid fully-qualified http, https, or ftp URL.",
        "ThisFieldIsInvalid.": "This field is invalid."
      },
      "AbpFeatureManagement": {
        "'{0}' and '{1}' do not match.": "'{0}' and '{1}' do not match.",
        "The {0} field is not a valid credit card number.": "The {0} field is not a valid credit card number.",
        "{0} is not valid.": "{0} is not valid.",
        "The {0} field is not a valid e-mail address.": "The {0} field is not a valid e-mail address.",
        "The {0} field only accepts files with the following extensions: {1}": "The {0} field only accepts files with the following extensions: {1}",
        "The field {0} must be a string or array type with a maximum length of '{1}'.": "The field {0} must be a string or array type with a maximum length of '{1}'.",
        "The field {0} must be a string or array type with a minimum length of '{1}'.": "The field {0} must be a string or array type with a minimum length of '{1}'.",
        "The {0} field is not a valid phone number.": "The {0} field is not a valid phone number.",
        "The field {0} must be between {1} and {2}.": "The field {0} must be between {1} and {2}.",
        "The field {0} must match the regular expression '{1}'.": "The field {0} does not match the requested format.",
        "The {0} field is required.": "The {0} field is required.",
        "The field {0} must be a string with a maximum length of {1}.": "The field {0} must be a string with a maximum length of {1}.",
        "The field {0} must be a string with a minimum length of {2} and a maximum length of {1}.": "The field {0} must be a string with a minimum length of {2} and a maximum length of {1}.",
        "The {0} field is not a valid fully-qualified http, https, or ftp URL.": "The {0} field is not a valid fully-qualified http, https, or ftp URL.",
        "The field {0} is invalid.": "The field {0} is invalid.",
        "ThisFieldIsNotAValidCreditCardNumber.": "This field is not a valid credit card number.",
        "ThisFieldIsNotValid.": "This field is not valid.",
        "ThisFieldIsNotAValidEmailAddress.": "This field is not a valid e-mail address.",
        "ThisFieldOnlyAcceptsFilesWithTheFollowingExtensions:{0}": "This field only accepts files with the following extensions: {0}",
        "ThisFieldMustBeAStringOrArrayTypeWithAMaximumLengthOf{0}": "This field must be a string or array type with a maximum length of '{0}'.",
        "ThisFieldMustBeAStringOrArrayTypeWithAMinimumLengthOf{0}": "This field must be a string or array type with a minimum length of '{0}'.",
        "ThisFieldIsNotAValidPhoneNumber.": "This field is not a valid phone number.",
        "ThisFieldMustBeBetween{0}And{1}": "This field must be between {0} and {1}.",
        "ThisFieldMustMatchTheRegularExpression{0}": "This field must match the regular expression '{0}'.",
        "ThisFieldIsRequired.": "This field is required.",
        "ThisFieldMustBeAStringWithAMaximumLengthOf{0}": "This field must be a string with a maximum length of {0}.",
        "ThisFieldMustBeAStringWithAMinimumLengthOf{1}AndAMaximumLengthOf{0}": "This field must be a string with a minimum length of {1} and a maximum length of {0}.",
        "ThisFieldIsNotAValidFullyQualifiedHttpHttpsOrFtpUrl": "This field is not a valid fully-qualified http, https, or ftp URL.",
        "ThisFieldIsInvalid.": "This field is invalid.",
        "InternalServerErrorMessage": "An internal error occurred during your request!",
        "ValidationErrorMessage": "Your request is not valid!",
        "ValidationNarrativeErrorMessageTitle": "The following errors were detected during validation.",
        "DefaultErrorMessage": "An error has occurred!",
        "DefaultErrorMessageDetail": "Error detail not sent by server.",
        "DefaultErrorMessage401": "You are not authenticated!",
        "DefaultErrorMessage401Detail": "You should sign in to perform this operation.",
        "DefaultErrorMessage403": "You are not authorized!",
        "DefaultErrorMessage403Detail": "You are not allowed to perform this operation!",
        "DefaultErrorMessage404": "Resource not found!",
        "DefaultErrorMessage404Detail": "The resource requested could not found on the server!",
        "EntityNotFoundErrorMessage": "There is no entity {0} with id = {1}!",
        "Languages": "Languages",
        "Error": "Error",
        "AreYouSure": "Are you sure?",
        "Cancel": "Cancel",
        "Clear": "Clear",
        "Yes": "Yes",
        "No": "No",
        "Ok": "Ok",
        "Close": "Close",
        "Save": "Save",
        "SavingWithThreeDot": "Saving...",
        "Actions": "Actions",
        "Delete": "Delete",
        "Edit": "Edit",
        "Refresh": "Refresh",
        "Language": "Language",
        "LoadMore": "Load more",
        "ProcessingWithThreeDot": "Processing...",
        "LoadingWithThreeDot": "Loading...",
        "Welcome": "Welcome",
        "Login": "Login",
        "Register": "Register",
        "Logout": "Log out",
        "Submit": "Submit",
        "Back": "Back",
        "PagerSearch": "Search",
        "PagerNext": "Next",
        "PagerPrevious": "Previous",
        "PagerFirst": "First",
        "PagerLast": "Last",
        "PagerInfo": "Showing _START_ to _END_ of _TOTAL_ entries",
        "PagerInfo{0}{1}{2}": "Showing {0} to {1} of {2} entries",
        "PagerInfoEmpty": "Showing 0 to 0 of 0 entries",
        "PagerInfoFiltered": "(filtered from _MAX_ total entries)",
        "NoDataAvailableInDatatable": "No data available",
        "Total": "total",
        "Selected": "selected",
        "PagerShowMenuEntries": "Show _MENU_ entries",
        "DatatableActionDropdownDefaultText": "Actions",
        "ChangePassword": "Change password",
        "PersonalInfo": "My profile",
        "AreYouSureYouWantToCancelEditingWarningMessage": "You have unsaved changes.",
        "UnhandledException": "Unhandled exception!",
        "401Message": "Unauthorized",
        "403Message": "Forbidden",
        "404Message": "Page not found",
        "500Message": "Internal Server Error",
        "GoHomePage": "Go to the homepage",
        "GoBack": "Go back",
        "Search": "Search",
        "ItemWillBeDeletedMessageWithFormat": "{0} will be deleted!",
        "ItemWillBeDeletedMessage": "This item will be deleted!",
        "Features": "Features",
        "NoFeatureFoundMessage": "There isn't any available feature.",
        "Permission:FeatureManagement": "Feature management",
        "Permission:FeatureManagement.ManageHostFeatures": "Manage Host features",
        "Volo.Abp.FeatureManagement:InvalidFeatureValue": "{0} feature value is not valid!"
      },
      "AbpIdentity": {
        "'{0}' and '{1}' do not match.": "'{0}' and '{1}' do not match.",
        "The {0} field is not a valid credit card number.": "The {0} field is not a valid credit card number.",
        "{0} is not valid.": "{0} is not valid.",
        "The {0} field is not a valid e-mail address.": "The {0} field is not a valid e-mail address.",
        "The {0} field only accepts files with the following extensions: {1}": "The {0} field only accepts files with the following extensions: {1}",
        "The field {0} must be a string or array type with a maximum length of '{1}'.": "The field {0} must be a string or array type with a maximum length of '{1}'.",
        "The field {0} must be a string or array type with a minimum length of '{1}'.": "The field {0} must be a string or array type with a minimum length of '{1}'.",
        "The {0} field is not a valid phone number.": "The {0} field is not a valid phone number.",
        "The field {0} must be between {1} and {2}.": "The field {0} must be between {1} and {2}.",
        "The field {0} must match the regular expression '{1}'.": "The field {0} does not match the requested format.",
        "The {0} field is required.": "The {0} field is required.",
        "The field {0} must be a string with a maximum length of {1}.": "The field {0} must be a string with a maximum length of {1}.",
        "The field {0} must be a string with a minimum length of {2} and a maximum length of {1}.": "The field {0} must be a string with a minimum length of {2} and a maximum length of {1}.",
        "The {0} field is not a valid fully-qualified http, https, or ftp URL.": "The {0} field is not a valid fully-qualified http, https, or ftp URL.",
        "The field {0} is invalid.": "The field {0} is invalid.",
        "ThisFieldIsNotAValidCreditCardNumber.": "This field is not a valid credit card number.",
        "ThisFieldIsNotValid.": "This field is not valid.",
        "ThisFieldIsNotAValidEmailAddress.": "This field is not a valid e-mail address.",
        "ThisFieldOnlyAcceptsFilesWithTheFollowingExtensions:{0}": "This field only accepts files with the following extensions: {0}",
        "ThisFieldMustBeAStringOrArrayTypeWithAMaximumLengthOf{0}": "This field must be a string or array type with a maximum length of '{0}'.",
        "ThisFieldMustBeAStringOrArrayTypeWithAMinimumLengthOf{0}": "This field must be a string or array type with a minimum length of '{0}'.",
        "ThisFieldIsNotAValidPhoneNumber.": "This field is not a valid phone number.",
        "ThisFieldMustBeBetween{0}And{1}": "This field must be between {0} and {1}.",
        "ThisFieldMustMatchTheRegularExpression{0}": "This field must match the regular expression '{0}'.",
        "ThisFieldIsRequired.": "This field is required.",
        "ThisFieldMustBeAStringWithAMaximumLengthOf{0}": "This field must be a string with a maximum length of {0}.",
        "ThisFieldMustBeAStringWithAMinimumLengthOf{1}AndAMaximumLengthOf{0}": "This field must be a string with a minimum length of {1} and a maximum length of {0}.",
        "ThisFieldIsNotAValidFullyQualifiedHttpHttpsOrFtpUrl": "This field is not a valid fully-qualified http, https, or ftp URL.",
        "ThisFieldIsInvalid.": "This field is invalid.",
        "InternalServerErrorMessage": "An internal error occurred during your request!",
        "ValidationErrorMessage": "Your request is not valid!",
        "ValidationNarrativeErrorMessageTitle": "The following errors were detected during validation.",
        "DefaultErrorMessage": "An error has occurred!",
        "DefaultErrorMessageDetail": "Error detail not sent by server.",
        "DefaultErrorMessage401": "You are not authenticated!",
        "DefaultErrorMessage401Detail": "You should sign in to perform this operation.",
        "DefaultErrorMessage403": "You are not authorized!",
        "DefaultErrorMessage403Detail": "You are not allowed to perform this operation!",
        "DefaultErrorMessage404": "Resource not found!",
        "DefaultErrorMessage404Detail": "The resource requested could not found on the server!",
        "EntityNotFoundErrorMessage": "There is no entity {0} with id = {1}!",
        "Languages": "Languages",
        "Error": "Error",
        "AreYouSure": "Are you sure?",
        "Cancel": "Cancel",
        "Clear": "Clear",
        "Yes": "Yes",
        "No": "No",
        "Ok": "Ok",
        "Close": "Close",
        "Save": "Save",
        "SavingWithThreeDot": "Saving...",
        "Actions": "Actions",
        "Delete": "Delete",
        "Edit": "Edit",
        "Refresh": "Refresh",
        "Language": "Language",
        "LoadMore": "Load more",
        "ProcessingWithThreeDot": "Processing...",
        "LoadingWithThreeDot": "Loading...",
        "Welcome": "Welcome",
        "Login": "Login",
        "Register": "Register",
        "Logout": "Log out",
        "Submit": "Submit",
        "Back": "Back",
        "PagerSearch": "Search",
        "PagerNext": "Next",
        "PagerPrevious": "Previous",
        "PagerFirst": "First",
        "PagerLast": "Last",
        "PagerInfo": "Showing _START_ to _END_ of _TOTAL_ entries",
        "PagerInfo{0}{1}{2}": "Showing {0} to {1} of {2} entries",
        "PagerInfoEmpty": "Showing 0 to 0 of 0 entries",
        "PagerInfoFiltered": "(filtered from _MAX_ total entries)",
        "NoDataAvailableInDatatable": "No data available",
        "Total": "total",
        "Selected": "selected",
        "PagerShowMenuEntries": "Show _MENU_ entries",
        "DatatableActionDropdownDefaultText": "Actions",
        "ChangePassword": "Change password",
        "PersonalInfo": "My profile",
        "AreYouSureYouWantToCancelEditingWarningMessage": "You have unsaved changes.",
        "UnhandledException": "Unhandled exception!",
        "401Message": "Unauthorized",
        "403Message": "Forbidden",
        "404Message": "Page not found",
        "500Message": "Internal Server Error",
        "GoHomePage": "Go to the homepage",
        "GoBack": "Go back",
        "Search": "Search",
        "ItemWillBeDeletedMessageWithFormat": "{0} will be deleted!",
        "ItemWillBeDeletedMessage": "This item will be deleted!",
        "Menu:IdentityManagement": "Identity management",
        "Users": "Users",
        "NewUser": "New user",
        "UserName": "User name",
        "EmailAddress": "Email address",
        "PhoneNumber": "Phone number",
        "UserInformations": "User information",
        "DisplayName:IsDefault": "Default",
        "DisplayName:IsStatic": "Static",
        "DisplayName:IsPublic": "Public",
        "Roles": "Roles",
        "Password": "Password",
        "PersonalSettings": "Personal settings",
        "UserDeletionConfirmationMessage": "User '{0}' will be deleted. Do you confirm that?",
        "RoleDeletionConfirmationMessage": "Role '{0}' will be deleted. Do you confirm that?",
        "DisplayName:RoleName": "Role name",
        "DisplayName:UserName": "User name",
        "DisplayName:Name": "Name",
        "DisplayName:Surname": "Surname",
        "DisplayName:Password": "Password",
        "DisplayName:Email": "Email address",
        "DisplayName:PhoneNumber": "Phone number",
        "DisplayName:TwoFactorEnabled": "Two factor verification",
        "DisplayName:LockoutEnabled": "Lock account after failed login attempts",
        "NewRole": "New role",
        "RoleName": "Role name",
        "CreationTime": "Creation time",
        "Permissions": "Permissions",
        "DisplayName:CurrentPassword": "Current password",
        "DisplayName:NewPassword": "New password",
        "DisplayName:NewPasswordConfirm": "Confirm new password",
        "PasswordChangedMessage": "Your password has been changed successfully.",
        "PersonalSettingsSavedMessage": "Your personal settings has been saved successfully.",
        "Volo.Abp.Identity:DefaultError": "An unknown failure has occurred.",
        "Volo.Abp.Identity:ConcurrencyFailure": "Optimistic concurrency failure, object has been modified.",
        "Volo.Abp.Identity:DuplicateEmail": "Email '{0}' is already taken.",
        "Volo.Abp.Identity:DuplicateRoleName": "Role name '{0}' is already taken.",
        "Volo.Abp.Identity:DuplicateUserName": "User name '{0}' is already taken.",
        "Volo.Abp.Identity:InvalidEmail": "Email '{0}' is invalid.",
        "Volo.Abp.Identity:InvalidPasswordHasherCompatibilityMode": "The provided PasswordHasherCompatibilityMode is invalid.",
        "Volo.Abp.Identity:InvalidPasswordHasherIterationCount": "The iteration count must be a positive integer.",
        "Volo.Abp.Identity:InvalidRoleName": "Role name '{0}' is invalid.",
        "Volo.Abp.Identity:InvalidToken": "Invalid token.",
        "Volo.Abp.Identity:InvalidUserName": "User name '{0}' is invalid, can only contain letters or digits.",
        "Volo.Abp.Identity:LoginAlreadyAssociated": "A user with this login already exists.",
        "Volo.Abp.Identity:PasswordMismatch": "Incorrect password.",
        "Volo.Abp.Identity:PasswordRequiresDigit": "Passwords must have at least one digit ('0'-'9').",
        "Volo.Abp.Identity:PasswordRequiresLower": "Passwords must have at least one lowercase ('a'-'z').",
        "Volo.Abp.Identity:PasswordRequiresNonAlphanumeric": "Passwords must have at least one non alphanumeric character.",
        "Volo.Abp.Identity:PasswordRequiresUpper": "Passwords must have at least one uppercase ('A'-'Z').",
        "Volo.Abp.Identity:PasswordTooShort": "Passwords must be at least {0} characters.",
        "Volo.Abp.Identity:RoleNotFound": "Role {0} does not exist.",
        "Volo.Abp.Identity:UserAlreadyHasPassword": "User already has a password set.",
        "Volo.Abp.Identity:UserAlreadyInRole": "User already in role '{0}'.",
        "Volo.Abp.Identity:UserLockedOut": "User is locked out.",
        "Volo.Abp.Identity:UserLockoutNotEnabled": "Lockout is not enabled for this user.",
        "Volo.Abp.Identity:UserNameNotFound": "User {0} does not exist.",
        "Volo.Abp.Identity:UserNotInRole": "User is not in role '{0}'.",
        "Volo.Abp.Identity:PasswordConfirmationFailed": "Password does not match the confirm password.",
        "Volo.Abp.Identity:010001": "You can not delete your own account!",
        "Volo.Abp.Identity:010002": "Can not set more than {MaxUserMembershipCount} organization unit for a user!",
        "Volo.Abp.Identity:010003": "Can not change password of an externally logged in user!",
        "Volo.Abp.Identity:010004": "There is already an organization unit with name {0}. Two units with same name can not be created in same level.",
        "Volo.Abp.Identity:010005": "Static roles can not be renamed.",
        "Volo.Abp.Identity:010006": "Static roles can not be deleted.",
        "Volo.Abp.Identity:010007": "You can't change your two factor setting.",
        "Volo.Abp.Identity:010008": "It's not allowed to change two factor setting.",
        "Identity.OrganizationUnit.MaxUserMembershipCount": "Maximum allowed organization unit membership count for a user",
        "Permission:IdentityManagement": "Identity management",
        "Permission:RoleManagement": "Role management",
        "Permission:Create": "Create",
        "Permission:Edit": "Edit",
        "Permission:Delete": "Delete",
        "Permission:ChangePermissions": "Change permissions",
        "Permission:UserManagement": "User management",
        "Permission:UserLookup": "User lookup",
        "Feature:IdentityGroup": "Identity",
        "Feature:TwoFactor": "Two Factor",
        "Feature:TwoFactorDescription": "Two Factor",
        "Feature:TwoFactor.Optional": "Optional",
        "Feature:TwoFactor.Disabled": "Disabled",
        "Feature:TwoFactor.Forced": "Forced",
        "DisplayName:Abp.Identity.Password.RequiredLength": "Required length",
        "DisplayName:Abp.Identity.Password.RequiredUniqueChars": "Required unique characters number",
        "DisplayName:Abp.Identity.Password.RequireNonAlphanumeric": "Required non-alphanumeric character",
        "DisplayName:Abp.Identity.Password.RequireLowercase": "Required lower case character",
        "DisplayName:Abp.Identity.Password.RequireUppercase": "Required upper case character",
        "DisplayName:Abp.Identity.Password.RequireDigit": "Required digit",
        "DisplayName:Abp.Identity.Lockout.AllowedForNewUsers": "Enabled for new users",
        "DisplayName:Abp.Identity.Lockout.LockoutDuration": "Lockout duration(seconds)",
        "DisplayName:Abp.Identity.Lockout.MaxFailedAccessAttempts": "Max failed access attempts",
        "DisplayName:Abp.Identity.SignIn.RequireConfirmedEmail": "Require confirmed email",
        "DisplayName:Abp.Identity.SignIn.EnablePhoneNumberConfirmation": "Allow users to confirm their phone number",
        "DisplayName:Abp.Identity.SignIn.RequireConfirmedPhoneNumber": "Require confirmed phone number",
        "DisplayName:Abp.Identity.User.IsUserNameUpdateEnabled": "Allow users to change their usernames",
        "DisplayName:Abp.Identity.User.IsEmailUpdateEnabled": "Allow users to change their email addresses",
        "Description:Abp.Identity.Password.RequiredLength": "The minimum length a password must be.",
        "Description:Abp.Identity.Password.RequiredUniqueChars": "The minimum number of unique characters which a password must contain.",
        "Description:Abp.Identity.Password.RequireNonAlphanumeric": "If passwords must contain a non-alphanumeric character.",
        "Description:Abp.Identity.Password.RequireLowercase": "If passwords must contain a lower case ASCII character.",
        "Description:Abp.Identity.Password.RequireUppercase": "If passwords must contain a upper case ASCII character.",
        "Description:Abp.Identity.Password.RequireDigit": "If passwords must contain a digit.",
        "Description:Abp.Identity.Lockout.AllowedForNewUsers": "Whether a new user can be locked out.",
        "Description:Abp.Identity.Lockout.LockoutDuration": "The duration a user is locked out for when a lockout occurs.",
        "Description:Abp.Identity.Lockout.MaxFailedAccessAttempts": "The number of failed access attempts allowed before a user is locked out, assuming lock out is enabled.",
        "Description:Abp.Identity.SignIn.RequireConfirmedEmail": "Whether a confirmed email address is required to sign in.",
        "Description:Abp.Identity.SignIn.EnablePhoneNumberConfirmation": "Whether the phoneNumber can be confirmed by the user.",
        "Description:Abp.Identity.SignIn.RequireConfirmedPhoneNumber": "Whether a confirmed telephone number is required to sign in.",
        "Description:Abp.Identity.User.IsUserNameUpdateEnabled": "Whether the username can be updated by the user.",
        "Description:Abp.Identity.User.IsEmailUpdateEnabled": "Whether the email can be updated by the user.",
        "DisplayName:Abp.Identity.TwoFactorBehaviour": "Two Factor behaviour",
        "Description:Abp.Identity.TwoFactorBehaviour": "Two Factor behaviour",
        "DisplayName:Abp.Identity.UsersCanChange": "Allow users to change their Two Factor.",
        "Description:Abp.Identity.UsersCanChange": "Allow users to change their Two Factor."
      },
      "AbpIdentityServer": {
        "'{0}' and '{1}' do not match.": "'{0}' and '{1}' do not match.",
        "The {0} field is not a valid credit card number.": "The {0} field is not a valid credit card number.",
        "{0} is not valid.": "{0} is not valid.",
        "The {0} field is not a valid e-mail address.": "The {0} field is not a valid e-mail address.",
        "The {0} field only accepts files with the following extensions: {1}": "The {0} field only accepts files with the following extensions: {1}",
        "The field {0} must be a string or array type with a maximum length of '{1}'.": "The field {0} must be a string or array type with a maximum length of '{1}'.",
        "The field {0} must be a string or array type with a minimum length of '{1}'.": "The field {0} must be a string or array type with a minimum length of '{1}'.",
        "The {0} field is not a valid phone number.": "The {0} field is not a valid phone number.",
        "The field {0} must be between {1} and {2}.": "The field {0} must be between {1} and {2}.",
        "The field {0} must match the regular expression '{1}'.": "The field {0} does not match the requested format.",
        "The {0} field is required.": "The {0} field is required.",
        "The field {0} must be a string with a maximum length of {1}.": "The field {0} must be a string with a maximum length of {1}.",
        "The field {0} must be a string with a minimum length of {2} and a maximum length of {1}.": "The field {0} must be a string with a minimum length of {2} and a maximum length of {1}.",
        "The {0} field is not a valid fully-qualified http, https, or ftp URL.": "The {0} field is not a valid fully-qualified http, https, or ftp URL.",
        "The field {0} is invalid.": "The field {0} is invalid.",
        "ThisFieldIsNotAValidCreditCardNumber.": "This field is not a valid credit card number.",
        "ThisFieldIsNotValid.": "This field is not valid.",
        "ThisFieldIsNotAValidEmailAddress.": "This field is not a valid e-mail address.",
        "ThisFieldOnlyAcceptsFilesWithTheFollowingExtensions:{0}": "This field only accepts files with the following extensions: {0}",
        "ThisFieldMustBeAStringOrArrayTypeWithAMaximumLengthOf{0}": "This field must be a string or array type with a maximum length of '{0}'.",
        "ThisFieldMustBeAStringOrArrayTypeWithAMinimumLengthOf{0}": "This field must be a string or array type with a minimum length of '{0}'.",
        "ThisFieldIsNotAValidPhoneNumber.": "This field is not a valid phone number.",
        "ThisFieldMustBeBetween{0}And{1}": "This field must be between {0} and {1}.",
        "ThisFieldMustMatchTheRegularExpression{0}": "This field must match the regular expression '{0}'.",
        "ThisFieldIsRequired.": "This field is required.",
        "ThisFieldMustBeAStringWithAMaximumLengthOf{0}": "This field must be a string with a maximum length of {0}.",
        "ThisFieldMustBeAStringWithAMinimumLengthOf{1}AndAMaximumLengthOf{0}": "This field must be a string with a minimum length of {1} and a maximum length of {0}.",
        "ThisFieldIsNotAValidFullyQualifiedHttpHttpsOrFtpUrl": "This field is not a valid fully-qualified http, https, or ftp URL.",
        "ThisFieldIsInvalid.": "This field is invalid.",
        "Volo.IdentityServer:DuplicateIdentityResourceName": "Identity Resource name already exist: {Name}",
        "Volo.IdentityServer:DuplicateApiResourceName": "Api Resource name already exist: {Name}",
        "Volo.IdentityServer:DuplicateClientId": "ClientId already exist: {ClientId}",
        "UserLockedOut": "The user account has been locked out due to invalid login attempts. Please wait a while and try again.",
        "InvalidUserNameOrPassword": "Invalid username or password!",
        "LoginIsNotAllowed": "You are not allowed to login! You need to confirm your email/phone number.",
        "InvalidUsername": "Invalid username or password!"
      },
      "AbpPermissionManagement": {
        "'{0}' and '{1}' do not match.": "'{0}' and '{1}' do not match.",
        "The {0} field is not a valid credit card number.": "The {0} field is not a valid credit card number.",
        "{0} is not valid.": "{0} is not valid.",
        "The {0} field is not a valid e-mail address.": "The {0} field is not a valid e-mail address.",
        "The {0} field only accepts files with the following extensions: {1}": "The {0} field only accepts files with the following extensions: {1}",
        "The field {0} must be a string or array type with a maximum length of '{1}'.": "The field {0} must be a string or array type with a maximum length of '{1}'.",
        "The field {0} must be a string or array type with a minimum length of '{1}'.": "The field {0} must be a string or array type with a minimum length of '{1}'.",
        "The {0} field is not a valid phone number.": "The {0} field is not a valid phone number.",
        "The field {0} must be between {1} and {2}.": "The field {0} must be between {1} and {2}.",
        "The field {0} must match the regular expression '{1}'.": "The field {0} does not match the requested format.",
        "The {0} field is required.": "The {0} field is required.",
        "The field {0} must be a string with a maximum length of {1}.": "The field {0} must be a string with a maximum length of {1}.",
        "The field {0} must be a string with a minimum length of {2} and a maximum length of {1}.": "The field {0} must be a string with a minimum length of {2} and a maximum length of {1}.",
        "The {0} field is not a valid fully-qualified http, https, or ftp URL.": "The {0} field is not a valid fully-qualified http, https, or ftp URL.",
        "The field {0} is invalid.": "The field {0} is invalid.",
        "ThisFieldIsNotAValidCreditCardNumber.": "This field is not a valid credit card number.",
        "ThisFieldIsNotValid.": "This field is not valid.",
        "ThisFieldIsNotAValidEmailAddress.": "This field is not a valid e-mail address.",
        "ThisFieldOnlyAcceptsFilesWithTheFollowingExtensions:{0}": "This field only accepts files with the following extensions: {0}",
        "ThisFieldMustBeAStringOrArrayTypeWithAMaximumLengthOf{0}": "This field must be a string or array type with a maximum length of '{0}'.",
        "ThisFieldMustBeAStringOrArrayTypeWithAMinimumLengthOf{0}": "This field must be a string or array type with a minimum length of '{0}'.",
        "ThisFieldIsNotAValidPhoneNumber.": "This field is not a valid phone number.",
        "ThisFieldMustBeBetween{0}And{1}": "This field must be between {0} and {1}.",
        "ThisFieldMustMatchTheRegularExpression{0}": "This field must match the regular expression '{0}'.",
        "ThisFieldIsRequired.": "This field is required.",
        "ThisFieldMustBeAStringWithAMaximumLengthOf{0}": "This field must be a string with a maximum length of {0}.",
        "ThisFieldMustBeAStringWithAMinimumLengthOf{1}AndAMaximumLengthOf{0}": "This field must be a string with a minimum length of {1} and a maximum length of {0}.",
        "ThisFieldIsNotAValidFullyQualifiedHttpHttpsOrFtpUrl": "This field is not a valid fully-qualified http, https, or ftp URL.",
        "ThisFieldIsInvalid.": "This field is invalid.",
        "InternalServerErrorMessage": "An internal error occurred during your request!",
        "ValidationErrorMessage": "Your request is not valid!",
        "ValidationNarrativeErrorMessageTitle": "The following errors were detected during validation.",
        "DefaultErrorMessage": "An error has occurred!",
        "DefaultErrorMessageDetail": "Error detail not sent by server.",
        "DefaultErrorMessage401": "You are not authenticated!",
        "DefaultErrorMessage401Detail": "You should sign in to perform this operation.",
        "DefaultErrorMessage403": "You are not authorized!",
        "DefaultErrorMessage403Detail": "You are not allowed to perform this operation!",
        "DefaultErrorMessage404": "Resource not found!",
        "DefaultErrorMessage404Detail": "The resource requested could not found on the server!",
        "EntityNotFoundErrorMessage": "There is no entity {0} with id = {1}!",
        "Languages": "Languages",
        "Error": "Error",
        "AreYouSure": "Are you sure?",
        "Cancel": "Cancel",
        "Clear": "Clear",
        "Yes": "Yes",
        "No": "No",
        "Ok": "Ok",
        "Close": "Close",
        "Save": "Save",
        "SavingWithThreeDot": "Saving...",
        "Actions": "Actions",
        "Delete": "Delete",
        "Edit": "Edit",
        "Refresh": "Refresh",
        "Language": "Language",
        "LoadMore": "Load more",
        "ProcessingWithThreeDot": "Processing...",
        "LoadingWithThreeDot": "Loading...",
        "Welcome": "Welcome",
        "Login": "Login",
        "Register": "Register",
        "Logout": "Log out",
        "Submit": "Submit",
        "Back": "Back",
        "PagerSearch": "Search",
        "PagerNext": "Next",
        "PagerPrevious": "Previous",
        "PagerFirst": "First",
        "PagerLast": "Last",
        "PagerInfo": "Showing _START_ to _END_ of _TOTAL_ entries",
        "PagerInfo{0}{1}{2}": "Showing {0} to {1} of {2} entries",
        "PagerInfoEmpty": "Showing 0 to 0 of 0 entries",
        "PagerInfoFiltered": "(filtered from _MAX_ total entries)",
        "NoDataAvailableInDatatable": "No data available",
        "Total": "total",
        "Selected": "selected",
        "PagerShowMenuEntries": "Show _MENU_ entries",
        "DatatableActionDropdownDefaultText": "Actions",
        "ChangePassword": "Change password",
        "PersonalInfo": "My profile",
        "AreYouSureYouWantToCancelEditingWarningMessage": "You have unsaved changes.",
        "UnhandledException": "Unhandled exception!",
        "401Message": "Unauthorized",
        "403Message": "Forbidden",
        "404Message": "Page not found",
        "500Message": "Internal Server Error",
        "GoHomePage": "Go to the homepage",
        "GoBack": "Go back",
        "Search": "Search",
        "ItemWillBeDeletedMessageWithFormat": "{0} will be deleted!",
        "ItemWillBeDeletedMessage": "This item will be deleted!",
        "Permissions": "Permissions",
        "OnlyProviderPermissons": "Only this provider",
        "All": "All",
        "SelectAllInAllTabs": "Grant all permissions",
        "SelectAllInThisTab": "Select all"
      },
      "AbpSettingManagement": {
        "Settings": "Settings",
        "SuccessfullySaved": "Successfully saved"
      },
      "AbpTenantManagement": {
        "'{0}' and '{1}' do not match.": "'{0}' and '{1}' do not match.",
        "The {0} field is not a valid credit card number.": "The {0} field is not a valid credit card number.",
        "{0} is not valid.": "{0} is not valid.",
        "The {0} field is not a valid e-mail address.": "The {0} field is not a valid e-mail address.",
        "The {0} field only accepts files with the following extensions: {1}": "The {0} field only accepts files with the following extensions: {1}",
        "The field {0} must be a string or array type with a maximum length of '{1}'.": "The field {0} must be a string or array type with a maximum length of '{1}'.",
        "The field {0} must be a string or array type with a minimum length of '{1}'.": "The field {0} must be a string or array type with a minimum length of '{1}'.",
        "The {0} field is not a valid phone number.": "The {0} field is not a valid phone number.",
        "The field {0} must be between {1} and {2}.": "The field {0} must be between {1} and {2}.",
        "The field {0} must match the regular expression '{1}'.": "The field {0} does not match the requested format.",
        "The {0} field is required.": "The {0} field is required.",
        "The field {0} must be a string with a maximum length of {1}.": "The field {0} must be a string with a maximum length of {1}.",
        "The field {0} must be a string with a minimum length of {2} and a maximum length of {1}.": "The field {0} must be a string with a minimum length of {2} and a maximum length of {1}.",
        "The {0} field is not a valid fully-qualified http, https, or ftp URL.": "The {0} field is not a valid fully-qualified http, https, or ftp URL.",
        "The field {0} is invalid.": "The field {0} is invalid.",
        "ThisFieldIsNotAValidCreditCardNumber.": "This field is not a valid credit card number.",
        "ThisFieldIsNotValid.": "This field is not valid.",
        "ThisFieldIsNotAValidEmailAddress.": "This field is not a valid e-mail address.",
        "ThisFieldOnlyAcceptsFilesWithTheFollowingExtensions:{0}": "This field only accepts files with the following extensions: {0}",
        "ThisFieldMustBeAStringOrArrayTypeWithAMaximumLengthOf{0}": "This field must be a string or array type with a maximum length of '{0}'.",
        "ThisFieldMustBeAStringOrArrayTypeWithAMinimumLengthOf{0}": "This field must be a string or array type with a minimum length of '{0}'.",
        "ThisFieldIsNotAValidPhoneNumber.": "This field is not a valid phone number.",
        "ThisFieldMustBeBetween{0}And{1}": "This field must be between {0} and {1}.",
        "ThisFieldMustMatchTheRegularExpression{0}": "This field must match the regular expression '{0}'.",
        "ThisFieldIsRequired.": "This field is required.",
        "ThisFieldMustBeAStringWithAMaximumLengthOf{0}": "This field must be a string with a maximum length of {0}.",
        "ThisFieldMustBeAStringWithAMinimumLengthOf{1}AndAMaximumLengthOf{0}": "This field must be a string with a minimum length of {1} and a maximum length of {0}.",
        "ThisFieldIsNotAValidFullyQualifiedHttpHttpsOrFtpUrl": "This field is not a valid fully-qualified http, https, or ftp URL.",
        "ThisFieldIsInvalid.": "This field is invalid.",
        "InternalServerErrorMessage": "An internal error occurred during your request!",
        "ValidationErrorMessage": "Your request is not valid!",
        "ValidationNarrativeErrorMessageTitle": "The following errors were detected during validation.",
        "DefaultErrorMessage": "An error has occurred!",
        "DefaultErrorMessageDetail": "Error detail not sent by server.",
        "DefaultErrorMessage401": "You are not authenticated!",
        "DefaultErrorMessage401Detail": "You should sign in to perform this operation.",
        "DefaultErrorMessage403": "You are not authorized!",
        "DefaultErrorMessage403Detail": "You are not allowed to perform this operation!",
        "DefaultErrorMessage404": "Resource not found!",
        "DefaultErrorMessage404Detail": "The resource requested could not found on the server!",
        "EntityNotFoundErrorMessage": "There is no entity {0} with id = {1}!",
        "Languages": "Languages",
        "Error": "Error",
        "AreYouSure": "Are you sure?",
        "Cancel": "Cancel",
        "Clear": "Clear",
        "Yes": "Yes",
        "No": "No",
        "Ok": "Ok",
        "Close": "Close",
        "Save": "Save",
        "SavingWithThreeDot": "Saving...",
        "Actions": "Actions",
        "Delete": "Delete",
        "Edit": "Edit",
        "Refresh": "Refresh",
        "Language": "Language",
        "LoadMore": "Load more",
        "ProcessingWithThreeDot": "Processing...",
        "LoadingWithThreeDot": "Loading...",
        "Welcome": "Welcome",
        "Login": "Login",
        "Register": "Register",
        "Logout": "Log out",
        "Submit": "Submit",
        "Back": "Back",
        "PagerSearch": "Search",
        "PagerNext": "Next",
        "PagerPrevious": "Previous",
        "PagerFirst": "First",
        "PagerLast": "Last",
        "PagerInfo": "Showing _START_ to _END_ of _TOTAL_ entries",
        "PagerInfo{0}{1}{2}": "Showing {0} to {1} of {2} entries",
        "PagerInfoEmpty": "Showing 0 to 0 of 0 entries",
        "PagerInfoFiltered": "(filtered from _MAX_ total entries)",
        "NoDataAvailableInDatatable": "No data available",
        "Total": "total",
        "Selected": "selected",
        "PagerShowMenuEntries": "Show _MENU_ entries",
        "DatatableActionDropdownDefaultText": "Actions",
        "ChangePassword": "Change password",
        "PersonalInfo": "My profile",
        "AreYouSureYouWantToCancelEditingWarningMessage": "You have unsaved changes.",
        "UnhandledException": "Unhandled exception!",
        "401Message": "Unauthorized",
        "403Message": "Forbidden",
        "404Message": "Page not found",
        "500Message": "Internal Server Error",
        "GoHomePage": "Go to the homepage",
        "GoBack": "Go back",
        "Search": "Search",
        "ItemWillBeDeletedMessageWithFormat": "{0} will be deleted!",
        "ItemWillBeDeletedMessage": "This item will be deleted!",
        "Features": "Features",
        "NoFeatureFoundMessage": "There isn't any available feature.",
        "Permission:FeatureManagement": "Feature management",
        "Permission:FeatureManagement.ManageHostFeatures": "Manage Host features",
        "Volo.Abp.FeatureManagement:InvalidFeatureValue": "{0} feature value is not valid!",
        "Menu:TenantManagement": "Tenant management",
        "Tenants": "Tenants",
        "NewTenant": "New tenant",
        "TenantName": "Tenant name",
        "DisplayName:TenantName": "Tenant name",
        "TenantDeletionConfirmationMessage": "Tenant '{0}' will be deleted. Do you confirm that?",
        "ConnectionStrings": "Connection Strings",
        "DisplayName:DefaultConnectionString": "Default Connection String",
        "DisplayName:UseSharedDatabase": "Use the Shared Database",
        "ManageHostFeatures": "Manage Host features",
        "Permission:TenantManagement": "Tenant management",
        "Permission:Create": "Create",
        "Permission:Edit": "Edit",
        "Permission:Delete": "Delete",
        "Permission:ManageConnectionStrings": "Manage connection strings",
        "Permission:ManageFeatures": "Manage features",
        "DisplayName:AdminEmailAddress": "Admin Email Address",
        "DisplayName:AdminPassword": "Admin Password"
      },
      "TigerAdmin": {
        "'{0}' and '{1}' do not match.": "'{0}' and '{1}' do not match.",
        "The {0} field is not a valid credit card number.": "The {0} field is not a valid credit card number.",
        "{0} is not valid.": "{0} is not valid.",
        "The {0} field is not a valid e-mail address.": "The {0} field is not a valid e-mail address.",
        "The {0} field only accepts files with the following extensions: {1}": "The {0} field only accepts files with the following extensions: {1}",
        "The field {0} must be a string or array type with a maximum length of '{1}'.": "The field {0} must be a string or array type with a maximum length of '{1}'.",
        "The field {0} must be a string or array type with a minimum length of '{1}'.": "The field {0} must be a string or array type with a minimum length of '{1}'.",
        "The {0} field is not a valid phone number.": "The {0} field is not a valid phone number.",
        "The field {0} must be between {1} and {2}.": "The field {0} must be between {1} and {2}.",
        "The field {0} must match the regular expression '{1}'.": "The field {0} does not match the requested format.",
        "The {0} field is required.": "The {0} field is required.",
        "The field {0} must be a string with a maximum length of {1}.": "The field {0} must be a string with a maximum length of {1}.",
        "The field {0} must be a string with a minimum length of {2} and a maximum length of {1}.": "The field {0} must be a string with a minimum length of {2} and a maximum length of {1}.",
        "The {0} field is not a valid fully-qualified http, https, or ftp URL.": "The {0} field is not a valid fully-qualified http, https, or ftp URL.",
        "The field {0} is invalid.": "The field {0} is invalid.",
        "ThisFieldIsNotAValidCreditCardNumber.": "This field is not a valid credit card number.",
        "ThisFieldIsNotValid.": "This field is not valid.",
        "ThisFieldIsNotAValidEmailAddress.": "This field is not a valid e-mail address.",
        "ThisFieldOnlyAcceptsFilesWithTheFollowingExtensions:{0}": "This field only accepts files with the following extensions: {0}",
        "ThisFieldMustBeAStringOrArrayTypeWithAMaximumLengthOf{0}": "This field must be a string or array type with a maximum length of '{0}'.",
        "ThisFieldMustBeAStringOrArrayTypeWithAMinimumLengthOf{0}": "This field must be a string or array type with a minimum length of '{0}'.",
        "ThisFieldIsNotAValidPhoneNumber.": "This field is not a valid phone number.",
        "ThisFieldMustBeBetween{0}And{1}": "This field must be between {0} and {1}.",
        "ThisFieldMustMatchTheRegularExpression{0}": "This field must match the regular expression '{0}'.",
        "ThisFieldIsRequired.": "This field is required.",
        "ThisFieldMustBeAStringWithAMaximumLengthOf{0}": "This field must be a string with a maximum length of {0}.",
        "ThisFieldMustBeAStringWithAMinimumLengthOf{1}AndAMaximumLengthOf{0}": "This field must be a string with a minimum length of {1} and a maximum length of {0}.",
        "ThisFieldIsNotAValidFullyQualifiedHttpHttpsOrFtpUrl": "This field is not a valid fully-qualified http, https, or ftp URL.",
        "ThisFieldIsInvalid.": "This field is invalid.",
        "InternalServerErrorMessage": "An internal error occurred during your request!",
        "ValidationErrorMessage": "Your request is not valid!",
        "ValidationNarrativeErrorMessageTitle": "The following errors were detected during validation.",
        "DefaultErrorMessage": "An error has occurred!",
        "DefaultErrorMessageDetail": "Error detail not sent by server.",
        "DefaultErrorMessage401": "You are not authenticated!",
        "DefaultErrorMessage401Detail": "You should sign in to perform this operation.",
        "DefaultErrorMessage403": "You are not authorized!",
        "DefaultErrorMessage403Detail": "You are not allowed to perform this operation!",
        "DefaultErrorMessage404": "Resource not found!",
        "DefaultErrorMessage404Detail": "The resource requested could not found on the server!",
        "EntityNotFoundErrorMessage": "There is no entity {0} with id = {1}!",
        "Languages": "Languages",
        "Error": "Error",
        "AreYouSure": "Are you sure?",
        "Cancel": "Cancel",
        "Clear": "Clear",
        "Yes": "Yes",
        "No": "No",
        "Ok": "Ok",
        "Close": "Close",
        "Save": "Save",
        "SavingWithThreeDot": "Saving...",
        "Actions": "Actions",
        "Delete": "Delete",
        "Edit": "Edit",
        "Refresh": "Refresh",
        "Language": "Language",
        "LoadMore": "Load more",
        "ProcessingWithThreeDot": "Processing...",
        "LoadingWithThreeDot": "Loading...",
        "Welcome": "Welcome",
        "Login": "Login",
        "Register": "Register",
        "Logout": "Log out",
        "Submit": "Submit",
        "Back": "Back",
        "PagerSearch": "Search",
        "PagerNext": "Next",
        "PagerPrevious": "Previous",
        "PagerFirst": "First",
        "PagerLast": "Last",
        "PagerInfo": "Showing _START_ to _END_ of _TOTAL_ entries",
        "PagerInfo{0}{1}{2}": "Showing {0} to {1} of {2} entries",
        "PagerInfoEmpty": "Showing 0 to 0 of 0 entries",
        "PagerInfoFiltered": "(filtered from _MAX_ total entries)",
        "NoDataAvailableInDatatable": "No data available",
        "Total": "total",
        "Selected": "selected",
        "PagerShowMenuEntries": "Show _MENU_ entries",
        "DatatableActionDropdownDefaultText": "Actions",
        "ChangePassword": "Change password",
        "PersonalInfo": "My profile",
        "AreYouSureYouWantToCancelEditingWarningMessage": "You have unsaved changes.",
        "UnhandledException": "Unhandled exception!",
        "401Message": "Unauthorized",
        "403Message": "Forbidden",
        "404Message": "Page not found",
        "500Message": "Internal Server Error",
        "GoHomePage": "Go to the homepage",
        "GoBack": "Go back",
        "Search": "Search",
        "ItemWillBeDeletedMessageWithFormat": "{0} will be deleted!",
        "ItemWillBeDeletedMessage": "This item will be deleted!",
        "Menu:Home": "Home",
        "LongWelcomeMessage": "Welcome to the application. This is a startup project based on the ABP framework. For more information, visit abp.io.",
        "Menu:BookStore": "Book Store",
        "Menu:Books": "Books",
        "PublishDate": "Publish date",
        "NewBook": "New book",
        "Name": "Name",
        "Type": "Type",
        "Price": "Price",
        "CreationTime": "Creation time",
        "AreYouSureToDelete": "Are you sure you want to delete this item?",
        "Enum:BookType:0": "Undefined",
        "Enum:BookType:1": "Adventure",
        "Enum:BookType:2": "Biography",
        "Enum:BookType:3": "Dystopia",
        "Enum:BookType:4": "Fantastic",
        "Enum:BookType:5": "Horror",
        "Enum:BookType:6": "Science",
        "Enum:BookType:7": "Science fiction",
        "Enum:BookType:8": "Poetry",
        "Permission:BookStore": "BookStore",
        "Permission:Book": "Book Management",
        "Permission:Books.Creat": "Creating new books",
        "Permission:Books.Edit": "Editing the books",
        "Permission:Books.Delete": "Deleting the books"
      },
      "AbpTiming": {
        "DisplayName:Abp.Timing.Timezone": "Timezone",
        "Description:Abp.Timing.Timezone": "Application time zone"
      },
      "AbpDddApplicationContracts": {
        "MaxResultCountExceededExceptionMessage": "{0} can not be more than {1}! Increase {2}.{3} on the server side to allow more results."
      },
      "AbpAccount": {
        "'{0}' and '{1}' do not match.": "'{0}' and '{1}' do not match.",
        "The {0} field is not a valid credit card number.": "The {0} field is not a valid credit card number.",
        "{0} is not valid.": "{0} is not valid.",
        "The {0} field is not a valid e-mail address.": "The {0} field is not a valid e-mail address.",
        "The {0} field only accepts files with the following extensions: {1}": "The {0} field only accepts files with the following extensions: {1}",
        "The field {0} must be a string or array type with a maximum length of '{1}'.": "The field {0} must be a string or array type with a maximum length of '{1}'.",
        "The field {0} must be a string or array type with a minimum length of '{1}'.": "The field {0} must be a string or array type with a minimum length of '{1}'.",
        "The {0} field is not a valid phone number.": "The {0} field is not a valid phone number.",
        "The field {0} must be between {1} and {2}.": "The field {0} must be between {1} and {2}.",
        "The field {0} must match the regular expression '{1}'.": "The field {0} does not match the requested format.",
        "The {0} field is required.": "The {0} field is required.",
        "The field {0} must be a string with a maximum length of {1}.": "The field {0} must be a string with a maximum length of {1}.",
        "The field {0} must be a string with a minimum length of {2} and a maximum length of {1}.": "The field {0} must be a string with a minimum length of {2} and a maximum length of {1}.",
        "The {0} field is not a valid fully-qualified http, https, or ftp URL.": "The {0} field is not a valid fully-qualified http, https, or ftp URL.",
        "The field {0} is invalid.": "The field {0} is invalid.",
        "ThisFieldIsNotAValidCreditCardNumber.": "This field is not a valid credit card number.",
        "ThisFieldIsNotValid.": "This field is not valid.",
        "ThisFieldIsNotAValidEmailAddress.": "This field is not a valid e-mail address.",
        "ThisFieldOnlyAcceptsFilesWithTheFollowingExtensions:{0}": "This field only accepts files with the following extensions: {0}",
        "ThisFieldMustBeAStringOrArrayTypeWithAMaximumLengthOf{0}": "This field must be a string or array type with a maximum length of '{0}'.",
        "ThisFieldMustBeAStringOrArrayTypeWithAMinimumLengthOf{0}": "This field must be a string or array type with a minimum length of '{0}'.",
        "ThisFieldIsNotAValidPhoneNumber.": "This field is not a valid phone number.",
        "ThisFieldMustBeBetween{0}And{1}": "This field must be between {0} and {1}.",
        "ThisFieldMustMatchTheRegularExpression{0}": "This field must match the regular expression '{0}'.",
        "ThisFieldIsRequired.": "This field is required.",
        "ThisFieldMustBeAStringWithAMaximumLengthOf{0}": "This field must be a string with a maximum length of {0}.",
        "ThisFieldMustBeAStringWithAMinimumLengthOf{1}AndAMaximumLengthOf{0}": "This field must be a string with a minimum length of {1} and a maximum length of {0}.",
        "ThisFieldIsNotAValidFullyQualifiedHttpHttpsOrFtpUrl": "This field is not a valid fully-qualified http, https, or ftp URL.",
        "ThisFieldIsInvalid.": "This field is invalid.",
        "InternalServerErrorMessage": "An internal error occurred during your request!",
        "ValidationErrorMessage": "Your request is not valid!",
        "ValidationNarrativeErrorMessageTitle": "The following errors were detected during validation.",
        "DefaultErrorMessage": "An error has occurred!",
        "DefaultErrorMessageDetail": "Error detail not sent by server.",
        "DefaultErrorMessage401": "You are not authenticated!",
        "DefaultErrorMessage401Detail": "You should sign in to perform this operation.",
        "DefaultErrorMessage403": "You are not authorized!",
        "DefaultErrorMessage403Detail": "You are not allowed to perform this operation!",
        "DefaultErrorMessage404": "Resource not found!",
        "DefaultErrorMessage404Detail": "The resource requested could not found on the server!",
        "EntityNotFoundErrorMessage": "There is no entity {0} with id = {1}!",
        "Languages": "Languages",
        "Error": "Error",
        "AreYouSure": "Are you sure?",
        "Cancel": "Cancel",
        "Clear": "Clear",
        "Yes": "Yes",
        "No": "No",
        "Ok": "Ok",
        "Close": "Close",
        "Save": "Save",
        "SavingWithThreeDot": "Saving...",
        "Actions": "Actions",
        "Delete": "Delete",
        "Edit": "Edit",
        "Refresh": "Refresh",
        "Language": "Language",
        "LoadMore": "Load more",
        "ProcessingWithThreeDot": "Processing...",
        "LoadingWithThreeDot": "Loading...",
        "Welcome": "Welcome",
        "Login": "Login",
        "Register": "Register",
        "Logout": "Log out",
        "Submit": "Submit",
        "Back": "Back",
        "PagerSearch": "Search",
        "PagerNext": "Next",
        "PagerPrevious": "Previous",
        "PagerFirst": "First",
        "PagerLast": "Last",
        "PagerInfo": "Showing _START_ to _END_ of _TOTAL_ entries",
        "PagerInfo{0}{1}{2}": "Showing {0} to {1} of {2} entries",
        "PagerInfoEmpty": "Showing 0 to 0 of 0 entries",
        "PagerInfoFiltered": "(filtered from _MAX_ total entries)",
        "NoDataAvailableInDatatable": "No data available",
        "Total": "total",
        "Selected": "selected",
        "PagerShowMenuEntries": "Show _MENU_ entries",
        "DatatableActionDropdownDefaultText": "Actions",
        "ChangePassword": "Change password",
        "PersonalInfo": "My profile",
        "AreYouSureYouWantToCancelEditingWarningMessage": "You have unsaved changes.",
        "UnhandledException": "Unhandled exception!",
        "401Message": "Unauthorized",
        "403Message": "Forbidden",
        "404Message": "Page not found",
        "500Message": "Internal Server Error",
        "GoHomePage": "Go to the homepage",
        "GoBack": "Go back",
        "Search": "Search",
        "ItemWillBeDeletedMessageWithFormat": "{0} will be deleted!",
        "ItemWillBeDeletedMessage": "This item will be deleted!",
        "UserName": "Username",
        "EmailAddress": "Email address",
        "UserNameOrEmailAddress": "Username or email address",
        "Password": "Password",
        "RememberMe": "Remember me",
        "UseAnotherServiceToLogin": "Use another service to log in",
        "UserLockedOutMessage": "The user account has been locked out due to invalid login attempts. Please wait a while and try again.",
        "InvalidUserNameOrPassword": "Invalid username or password!",
        "LoginIsNotAllowed": "You are not allowed to login! You need to confirm your email/phone number.",
        "SelfRegistrationDisabledMessage": "Self-registration is disabled for this application. Please contact the application administrator to register a new user.",
        "LocalLoginDisabledMessage": "Local login is disabled for this application.",
        "AreYouANewUser": "Are you a new user?",
        "AlreadyRegistered": "Already registered?",
        "InvalidLoginRequest": "Invalid login request",
        "ThereAreNoLoginSchemesConfiguredForThisClient": "There are no login schemes configured for this client.",
        "LogInUsingYourProviderAccount": "Log in using your {0} account",
        "DisplayName:CurrentPassword": "Current password",
        "DisplayName:NewPassword": "New password",
        "DisplayName:NewPasswordConfirm": "Confirm new password",
        "PasswordChangedMessage": "Your password has been changed successfully.",
        "DisplayName:UserName": "Username",
        "DisplayName:Email": "Email",
        "DisplayName:Name": "Name",
        "DisplayName:Surname": "Surname",
        "DisplayName:Password": "Password",
        "DisplayName:EmailAddress": "Email address",
        "DisplayName:PhoneNumber": "Phone number",
        "PersonalSettings": "Personal settings",
        "PersonalSettingsSaved": "Personal settings saved",
        "PasswordChanged": "Password changed",
        "NewPasswordConfirmFailed": "Please confirm the new password.",
        "Manage": "Manage",
        "ManageYourProfile": "Manage your profile",
        "DisplayName:Abp.Account.IsSelfRegistrationEnabled": "Is self-registration enabled",
        "Description:Abp.Account.IsSelfRegistrationEnabled": "Whether a user can register the account by him or herself.",
        "DisplayName:Abp.Account.EnableLocalLogin": "Authenticate with a local account",
        "Description:Abp.Account.EnableLocalLogin": "Indicates if the server will allow users to authenticate with a local account.",
        "LoggedOutTitle": "Signed Out",
        "LoggedOutText": "You have been signed out and you will be redirected soon.",
        "ReturnToText": "Click here to redirect to {0}",
        "OrLoginWith": "Or login with;",
        "ForgotPassword": "Forgot password?",
        "SendPasswordResetLink_Information": "A password reset link will be sent to your email to reset your password. If you don't get an email within a few minutes, please re-try.",
        "PasswordResetMailSentMessage": "Account recovery email sent to your e-mail address. If you don't see this email in your inbox within 15 minutes, look for it in your junk mail folder. If you find it there, please mark it as -Not Junk-. ",
        "ResetPassword": "Reset Password",
        "ConfirmPassword": "Confirm (repeat) the password",
        "ResetPassword_Information": "Please enter your new password.",
        "YourPasswordIsSuccessfullyReset": "Your password is successfully reset.",
        "GoToTheApplication": "Go to the application",
        "BackToLogin": "Back to login",
        "ProfileTab:Password": "Change password",
        "ProfileTab:PersonalInfo": "Personal info"
      },
      "AbpUi": {
        "InternalServerErrorMessage": "An internal error occurred during your request!",
        "ValidationErrorMessage": "Your request is not valid!",
        "ValidationNarrativeErrorMessageTitle": "The following errors were detected during validation.",
        "DefaultErrorMessage": "An error has occurred!",
        "DefaultErrorMessageDetail": "Error detail not sent by server.",
        "DefaultErrorMessage401": "You are not authenticated!",
        "DefaultErrorMessage401Detail": "You should sign in to perform this operation.",
        "DefaultErrorMessage403": "You are not authorized!",
        "DefaultErrorMessage403Detail": "You are not allowed to perform this operation!",
        "DefaultErrorMessage404": "Resource not found!",
        "DefaultErrorMessage404Detail": "The resource requested could not found on the server!",
        "EntityNotFoundErrorMessage": "There is no entity {0} with id = {1}!",
        "Languages": "Languages",
        "Error": "Error",
        "AreYouSure": "Are you sure?",
        "Cancel": "Cancel",
        "Clear": "Clear",
        "Yes": "Yes",
        "No": "No",
        "Ok": "Ok",
        "Close": "Close",
        "Save": "Save",
        "SavingWithThreeDot": "Saving...",
        "Actions": "Actions",
        "Delete": "Delete",
        "Edit": "Edit",
        "Refresh": "Refresh",
        "Language": "Language",
        "LoadMore": "Load more",
        "ProcessingWithThreeDot": "Processing...",
        "LoadingWithThreeDot": "Loading...",
        "Welcome": "Welcome",
        "Login": "Login",
        "Register": "Register",
        "Logout": "Log out",
        "Submit": "Submit",
        "Back": "Back",
        "PagerSearch": "Search",
        "PagerNext": "Next",
        "PagerPrevious": "Previous",
        "PagerFirst": "First",
        "PagerLast": "Last",
        "PagerInfo": "Showing _START_ to _END_ of _TOTAL_ entries",
        "PagerInfo{0}{1}{2}": "Showing {0} to {1} of {2} entries",
        "PagerInfoEmpty": "Showing 0 to 0 of 0 entries",
        "PagerInfoFiltered": "(filtered from _MAX_ total entries)",
        "NoDataAvailableInDatatable": "No data available",
        "Total": "total",
        "Selected": "selected",
        "PagerShowMenuEntries": "Show _MENU_ entries",
        "DatatableActionDropdownDefaultText": "Actions",
        "ChangePassword": "Change password",
        "PersonalInfo": "My profile",
        "AreYouSureYouWantToCancelEditingWarningMessage": "You have unsaved changes.",
        "UnhandledException": "Unhandled exception!",
        "401Message": "Unauthorized",
        "403Message": "Forbidden",
        "404Message": "Page not found",
        "500Message": "Internal Server Error",
        "GoHomePage": "Go to the homepage",
        "GoBack": "Go back",
        "Search": "Search",
        "ItemWillBeDeletedMessageWithFormat": "{0} will be deleted!",
        "ItemWillBeDeletedMessage": "This item will be deleted!"
      },
      "AbpEmailing": {
        "DisplayName:Abp.Mailing.DefaultFromAddress": "Default from address",
        "DisplayName:Abp.Mailing.DefaultFromDisplayName": "Default from display name",
        "DisplayName:Abp.Mailing.Smtp.Host": "Host",
        "DisplayName:Abp.Mailing.Smtp.Port": "Port",
        "DisplayName:Abp.Mailing.Smtp.UserName": "User name",
        "DisplayName:Abp.Mailing.Smtp.Password": "Password",
        "DisplayName:Abp.Mailing.Smtp.Domain": "Domain",
        "DisplayName:Abp.Mailing.Smtp.EnableSsl": "Enable SSL",
        "DisplayName:Abp.Mailing.Smtp.UseDefaultCredentials": "Use default credentials",
        "Description:Abp.Mailing.DefaultFromAddress": "The default from address",
        "Description:Abp.Mailing.DefaultFromDisplayName": "The default from display name",
        "Description:Abp.Mailing.Smtp.Host": "The name or IP address of the host used for SMTP transactions.",
        "Description:Abp.Mailing.Smtp.Port": "The port used for SMTP transactions.",
        "Description:Abp.Mailing.Smtp.UserName": "User name associated with the credentials.",
        "Description:Abp.Mailing.Smtp.Password": "The password for the user name associated with the credentials.",
        "Description:Abp.Mailing.Smtp.Domain": "The domain or computer name that verifies the credentials.",
        "Description:Abp.Mailing.Smtp.EnableSsl": "Whether the SmtpClient uses Secure Sockets Layer (SSL) to encrypt the connection.",
        "Description:Abp.Mailing.Smtp.UseDefaultCredentials": "Whether the DefaultCredentials are sent with requests.",
        "TextTemplate:StandardEmailTemplates.Layout": "Default email layout template",
        "TextTemplate:StandardEmailTemplates.Message": "Simple message template for emails"
      },
      "AbpUiNavigation": {
        "Menu:Administration": "Administration"
      },
      "AbpUiMultiTenancy": {
        "GivenTenantIsNotAvailable": "Given tenant is not available: {0}",
        "Tenant": "Tenant",
        "Switch": "switch",
        "Name": "Name",
        "SwitchTenantHint": "Leave the name field blank to switch to the host side.",
        "SwitchTenant": "Switch tenant",
        "NotSelected": "Not selected"
      }
    },
    "languages": [
      {
        "cultureName": "ar",
        "uiCultureName": "ar",
        "displayName": "العربية",
        "flagIcon": null
      },
      {
        "cultureName": "cs",
        "uiCultureName": "cs",
        "displayName": "Čeština",
        "flagIcon": null
      },
      {
        "cultureName": "en",
        "uiCultureName": "en",
        "displayName": "English",
        "flagIcon": null
      },
      {
        "cultureName": "fr",
        "uiCultureName": "fr",
        "displayName": "Français",
        "flagIcon": null
      },
      {
        "cultureName": "pt-BR",
        "uiCultureName": "pt-BR",
        "displayName": "Português",
        "flagIcon": null
      },
      {
        "cultureName": "ru",
        "uiCultureName": "ru",
        "displayName": "Русский",
        "flagIcon": null
      },
      {
        "cultureName": "tr",
        "uiCultureName": "tr",
        "displayName": "Türkçe",
        "flagIcon": null
      },
      {
        "cultureName": "zh-Hans",
        "uiCultureName": "zh-Hans",
        "displayName": "简体中文",
        "flagIcon": null
      },
      {
        "cultureName": "zh-Hant",
        "uiCultureName": "zh-Hant",
        "displayName": "繁體中文",
        "flagIcon": null
      }
    ],
    "currentCulture": {
      "displayName": "英语",
      "englishName": "English",
      "threeLetterIsoLanguageName": "eng",
      "twoLetterIsoLanguageName": "en",
      "isRightToLeft": false,
      "cultureName": "en",
      "name": "en",
      "nativeName": "English",
      "dateTimeFormat": {
        "calendarAlgorithmType": "SolarCalendar",
        "dateTimeFormatLong": "dddd, MMMM d, yyyy",
        "shortDatePattern": "M/d/yyyy",
        "fullDateTimePattern": "dddd, MMMM d, yyyy h:mm:ss tt",
        "dateSeparator": "/",
        "shortTimePattern": "h:mm tt",
        "longTimePattern": "h:mm:ss tt"
      }
    },
    "defaultResourceName": "TigerAdmin",
    "languagesMap": {
      "bootstrap-datepicker": [
        {
          "name": "zh-Hans",
          "value": "zh-CN"
        },
        {
          "name": "zh-Hant",
          "value": "zh-TW"
        }
      ]
    },
    "languageFilesMap": {
      "bootstrap-datepicker": [
        {
          "name": "zh-Hans",
          "value": "zh-CN"
        },
        {
          "name": "zh-Hant",
          "value": "zh-TW"
        }
      ],
      "jquery.timeago": [
        {
          "name": "zh-Hans",
          "value": "zh-CN"
        },
        {
          "name": "zh-Hant",
          "value": "zh-TW"
        }
      ],
      "jquery-validation": [
        {
          "name": "zh-Hans",
          "value": "zh"
        },
        {
          "name": "zh-Hant",
          "value": "zh_TW"
        }
      ]
    }
  },
  "auth": {
    "policies": {
      "AbpIdentity.Roles": true,
      "AbpIdentity.Roles.Create": true,
      "AbpIdentity.Roles.Update": true,
      "AbpIdentity.Roles.Delete": true,
      "AbpIdentity.Roles.ManagePermissions": true,
      "AbpIdentity.Users": true,
      "AbpIdentity.Users.Create": true,
      "AbpIdentity.Users.Update": true,
      "AbpIdentity.Users.Delete": true,
      "AbpIdentity.Users.ManagePermissions": true,
      "AbpIdentity.UserLookup": true,
      "FeatureManagement.ManageHostFeatures": true,
      "AbpTenantManagement.Tenants": true,
      "AbpTenantManagement.Tenants.Create": true,
      "AbpTenantManagement.Tenants.Update": true,
      "AbpTenantManagement.Tenants.Delete": true,
      "AbpTenantManagement.Tenants.ManageFeatures": true,
      "AbpTenantManagement.Tenants.ManageConnectionStrings": true,
      "TigerAdmin.Books": true,
      "TigerAdmin.Books.Create": true,
      "TigerAdmin.Books.Edit": true,
      "TigerAdmin.Books.Delete": true
    },
    "grantedPolicies": {
      "AbpIdentity.Roles": true,
      "AbpIdentity.Roles.Create": true,
      "AbpIdentity.Roles.Update": true,
      "AbpIdentity.Roles.Delete": true,
      "AbpIdentity.Roles.ManagePermissions": true,
      "AbpIdentity.Users": true,
      "AbpIdentity.Users.Create": true,
      "AbpIdentity.Users.Update": true,
      "AbpIdentity.Users.Delete": true,
      "AbpIdentity.Users.ManagePermissions": true,
      "FeatureManagement.ManageHostFeatures": true,
      "AbpTenantManagement.Tenants": true,
      "AbpTenantManagement.Tenants.Create": true,
      "AbpTenantManagement.Tenants.Update": true,
      "AbpTenantManagement.Tenants.Delete": true,
      "AbpTenantManagement.Tenants.ManageFeatures": true,
      "AbpTenantManagement.Tenants.ManageConnectionStrings": true
    }
  },
  "setting": {
    "values": {
      "Abp.Localization.DefaultLanguage": "en",
      "Abp.Timing.TimeZone": "UTC",
      "Abp.Identity.Password.RequiredLength": "6",
      "Abp.Identity.Password.RequiredUniqueChars": "1",
      "Abp.Identity.Password.RequireNonAlphanumeric": "True",
      "Abp.Identity.Password.RequireLowercase": "True",
      "Abp.Identity.Password.RequireUppercase": "True",
      "Abp.Identity.Password.RequireDigit": "True",
      "Abp.Identity.Lockout.AllowedForNewUsers": "True",
      "Abp.Identity.Lockout.LockoutDuration": "300",
      "Abp.Identity.Lockout.MaxFailedAccessAttempts": "5",
      "Abp.Identity.SignIn.RequireConfirmedEmail": "False",
      "Abp.Identity.SignIn.EnablePhoneNumberConfirmation": "True",
      "Abp.Identity.SignIn.RequireConfirmedPhoneNumber": "False",
      "Abp.Identity.User.IsUserNameUpdateEnabled": "True",
      "Abp.Identity.User.IsEmailUpdateEnabled": "True",
      "Abp.Identity.OrganizationUnit.MaxUserMembershipCount": "2147483647",
      "Abp.Identity.TwoFactor.Behaviour": "Optional",
      "Abp.Identity.TwoFactor.UsersCanChange": "True",
      "Abp.Account.IsSelfRegistrationEnabled": "true",
      "Abp.Account.EnableLocalLogin": "true"
    }
  },
  "currentUser": {
    "isAuthenticated": true,
    "id": "1847197c-bfc8-aa9c-bafd-39f8621f66ad",
    "tenantId": null,
    "userName": "admin",
    "name": "admin",
    "surName": null,
    "email": "admin@abp.io",
    "emailVerified": false,
    "phoneNumber": null,
    "phoneNumberVerified": false,
    "roles": [
      "admin"
    ]
  },
  "features": {
    "values": {
      "Identity.TwoFactor": "Optional"
    }
  },
  "multiTenancy": {
    "isEnabled": true
  },
  "currentTenant": {
    "id": null,
    "name": null,
    "isAvailable": false
  },
  "timing": {
    "timeZone": {
      "iana": {
        "timeZoneName": "Etc/UTC"
      },
      "windows": {
        "timeZoneId": "UTC"
      }
    }
  },
  "clock": {
    "kind": "Unspecified"
  },
  "objectExtensions": {
    "modules": {},
    "enums": {}
  }
}

















































{
  "entityDisplayName": "1847197c-bfc8-aa9c-bafd-39f8621f66ad",
  "groups": [
    {
      "name": "AbpIdentity",
      "displayName": "身份标识管理",
      "permissions": [
        {
          "name": "AbpIdentity.Roles",
          "displayName": "角色管理",
          "parentName": null,
          "isGranted": true,
          "allowedProviders": [],
          "grantedProviders": [
            {
              "providerName": "R",
              "providerKey": "admin"
            }
          ]
        },
        {
          "name": "AbpIdentity.Roles.Create",
          "displayName": "创建",
          "parentName": "AbpIdentity.Roles",
          "isGranted": true,
          "allowedProviders": [],
          "grantedProviders": [
            {
              "providerName": "U",
              "providerKey": "1847197c-bfc8-aa9c-bafd-39f8621f66ad"
            },
            {
              "providerName": "R",
              "providerKey": "admin"
            }
          ]
        },
        {
          "name": "AbpIdentity.Roles.Update",
          "displayName": "编辑",
          "parentName": "AbpIdentity.Roles",
          "isGranted": true,
          "allowedProviders": [],
          "grantedProviders": [
            {
              "providerName": "U",
              "providerKey": "1847197c-bfc8-aa9c-bafd-39f8621f66ad"
            },
            {
              "providerName": "R",
              "providerKey": "admin"
            }
          ]
        },
        {
          "name": "AbpIdentity.Roles.Delete",
          "displayName": "删除",
          "parentName": "AbpIdentity.Roles",
          "isGranted": true,
          "allowedProviders": [],
          "grantedProviders": [
            {
              "providerName": "U",
              "providerKey": "1847197c-bfc8-aa9c-bafd-39f8621f66ad"
            },
            {
              "providerName": "R",
              "providerKey": "admin"
            }
          ]
        },
        {
          "name": "AbpIdentity.Roles.ManagePermissions",
          "displayName": "更改权限",
          "parentName": "AbpIdentity.Roles",
          "isGranted": true,
          "allowedProviders": [],
          "grantedProviders": [
            {
              "providerName": "U",
              "providerKey": "1847197c-bfc8-aa9c-bafd-39f8621f66ad"
            },
            {
              "providerName": "R",
              "providerKey": "admin"
            }
          ]
        },
        {
          "name": "AbpIdentity.Users",
          "displayName": "用户管理",
          "parentName": null,
          "isGranted": true,
          "allowedProviders": [],
          "grantedProviders": [
            {
              "providerName": "R",
              "providerKey": "admin"
            }
          ]
        },
        {
          "name": "AbpIdentity.Users.Create",
          "displayName": "创建",
          "parentName": "AbpIdentity.Users",
          "isGranted": true,
          "allowedProviders": [],
          "grantedProviders": [
            {
              "providerName": "R",
              "providerKey": "admin"
            }
          ]
        },
        {
          "name": "AbpIdentity.Users.Update",
          "displayName": "编辑",
          "parentName": "AbpIdentity.Users",
          "isGranted": true,
          "allowedProviders": [],
          "grantedProviders": [
            {
              "providerName": "U",
              "providerKey": "1847197c-bfc8-aa9c-bafd-39f8621f66ad"
            },
            {
              "providerName": "R",
              "providerKey": "admin"
            }
          ]
        },
        {
          "name": "AbpIdentity.Users.Delete",
          "displayName": "删除",
          "parentName": "AbpIdentity.Users",
          "isGranted": true,
          "allowedProviders": [],
          "grantedProviders": [
            {
              "providerName": "R",
              "providerKey": "admin"
            }
          ]
        },
        {
          "name": "AbpIdentity.Users.ManagePermissions",
          "displayName": "更改权限",
          "parentName": "AbpIdentity.Users",
          "isGranted": true,
          "allowedProviders": [],
          "grantedProviders": [
            {
              "providerName": "R",
              "providerKey": "admin"
            }
          ]
        }
      ]
    },
    {
      "name": "FeatureManagement",
      "displayName": "特性管理",
      "permissions": [
        {
          "name": "FeatureManagement.ManageHostFeatures",
          "displayName": "管理Host特性",
          "parentName": null,
          "isGranted": true,
          "allowedProviders": [],
          "grantedProviders": [
            {
              "providerName": "R",
              "providerKey": "admin"
            }
          ]
        }
      ]
    },
    {
      "name": "AbpTenantManagement",
      "displayName": "租户管理",
      "permissions": [
        {
          "name": "AbpTenantManagement.Tenants",
          "displayName": "租户管理",
          "parentName": null,
          "isGranted": true,
          "allowedProviders": [],
          "grantedProviders": [
            {
              "providerName": "R",
              "providerKey": "admin"
            }
          ]
        },
        {
          "name": "AbpTenantManagement.Tenants.Create",
          "displayName": "创建",
          "parentName": "AbpTenantManagement.Tenants",
          "isGranted": true,
          "allowedProviders": [],
          "grantedProviders": [
            {
              "providerName": "R",
              "providerKey": "admin"
            }
          ]
        },
        {
          "name": "AbpTenantManagement.Tenants.Update",
          "displayName": "编辑",
          "parentName": "AbpTenantManagement.Tenants",
          "isGranted": true,
          "allowedProviders": [],
          "grantedProviders": [
            {
              "providerName": "U",
              "providerKey": "1847197c-bfc8-aa9c-bafd-39f8621f66ad"
            },
            {
              "providerName": "R",
              "providerKey": "admin"
            }
          ]
        },
        {
          "name": "AbpTenantManagement.Tenants.Delete",
          "displayName": "删除",
          "parentName": "AbpTenantManagement.Tenants",
          "isGranted": true,
          "allowedProviders": [],
          "grantedProviders": [
            {
              "providerName": "U",
              "providerKey": "1847197c-bfc8-aa9c-bafd-39f8621f66ad"
            },
            {
              "providerName": "R",
              "providerKey": "admin"
            }
          ]
        },
        {
          "name": "AbpTenantManagement.Tenants.ManageFeatures",
          "displayName": "管理功能",
          "parentName": "AbpTenantManagement.Tenants",
          "isGranted": true,
          "allowedProviders": [],
          "grantedProviders": [
            {
              "providerName": "R",
              "providerKey": "admin"
            }
          ]
        },
        {
          "name": "AbpTenantManagement.Tenants.ManageConnectionStrings",
          "displayName": "管理连接字符串",
          "parentName": "AbpTenantManagement.Tenants",
          "isGranted": true,
          "allowedProviders": [],
          "grantedProviders": [
            {
              "providerName": "R",
              "providerKey": "admin"
            }
          ]
        }
      ]
    },
    {
      "name": "TigerAdmin",
      "displayName": "TigerAdmin",
      "permissions": [
        {
          "name": "TigerAdmin.Books",
          "displayName": "Permission:Books",
          "parentName": null,
          "isGranted": true,
          "allowedProviders": [],
          "grantedProviders": [
            {
              "providerName": "R",
              "providerKey": "admin"
            }
          ]
        },
        {
          "name": "TigerAdmin.Books.Create",
          "displayName": "Permission:Book.Create",
          "parentName": "TigerAdmin.Books",
          "isGranted": true,
          "allowedProviders": [],
          "grantedProviders": [
            {
              "providerName": "R",
              "providerKey": "admin"
            }
          ]
        },
        {
          "name": "TigerAdmin.Books.Edit",
          "displayName": "Permission:Book.Edit",
          "parentName": "TigerAdmin.Books",
          "isGranted": true,
          "allowedProviders": [],
          "grantedProviders": [
            {
              "providerName": "R",
              "providerKey": "admin"
            }
          ]
        },
        {
          "name": "TigerAdmin.Books.Delete",
          "displayName": "Permission:Book.Delete",
          "parentName": "TigerAdmin.Books",
          "isGranted": true,
          "allowedProviders": [],
          "grantedProviders": [
            {
              "providerName": "R",
              "providerKey": "admin"
            }
          ]
        }
      ]
    }
  ]
}
